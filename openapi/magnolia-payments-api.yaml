openapi: 3.0.1
info:
  title: Template Api
  version: '1.0'
servers:
  - url: 'https://api.sandbox.fortressapi.com/'
paths:
  /api/internal-admin/v1/custodial-accounts/agreement:
    post:
      responses:
        '204':
          description: No content
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - InternalAdmin
      tags:
        - InternalAdmin
      requestBody:
        content:
          multipart/form-data:
            encoding:
              File:
                style: form
              UploadedBy:
                style: form
            schema:
              properties:
                File:
                  description: Get or set form file
                  format: binary
                  type: string
                UploadedBy:
                  description: Get or set uploaded by
                  type: string
              required:
                - File
                - UploadedBy
              type: object
      summary: 'Create custodial account agreement (Auth policies: InternalAdmin)'
  /api/internal-admin/v1/custodial-accounts/crypto-buy-refunds:
    post:
      parameters:
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No Content
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - InternalAdmin
      tags:
        - InternalAdmin
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateRefundPaymentForBuyCryptoModel'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRefundPaymentForBuyCryptoModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateRefundPaymentForBuyCryptoModel'
        description: Model that defines amount to transfer
      summary: >-
        Refund internal from Liquidity Provider to end user custodial (Auth
        policies: InternalAdmin)
  /api/internal-admin/v1/custodial-accounts/crypto-sell-refunds:
    post:
      parameters:
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No Content
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - InternalAdmin
      tags:
        - InternalAdmin
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateRefundPaymentForCryptoSellRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRefundPaymentForCryptoSellRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateRefundPaymentForCryptoSellRequest'
        description: Model that defines amount to transfer
      summary: >-
        Refund internal crypto from Liquidity Provider to end user custodial
        (Auth policies: InternalAdmin)
  /api/internal-admin/v1/custodial-accounts/ensure-system-accounts:
    patch:
      parameters:
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemAccountsValidationResultModel'
          description: Success
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - InternalAdmin
      tags:
        - InternalAdmin
      summary: 'Ensure system custodial account (Auth policies: InternalAdmin)'
  /api/internal-admin/v1/custodial-accounts/from-ca-to-fiat-migration-account:
    post:
      parameters:
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No content response.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User with such auth identifier was not found.
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Custodial account was not found.
      security:
        - Bearer:
            - InternalAdmin
      tags:
        - InternalAdmin
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/CreateInactiveAccountInternalMovementRequestModel
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CreateInactiveAccountInternalMovementRequestModel
          text/json:
            schema:
              $ref: >-
                #/components/schemas/CreateInactiveAccountInternalMovementRequestModel
        description: The custodial account identifier.
      summary: >-
        Create hidden payment to move fiat from an inactive provider specific to
        FortressTradeAndDepositFiatMigration account (Auth policies:
        InternalAdmin)
  /api/internal-admin/v1/custodial-accounts/from-ca-to-liquidity:
    post:
      parameters:
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No Content
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - InternalAdmin
      tags:
        - InternalAdmin
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/CreateRefundPaymentFromCustodialAccountToLiquidityRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CreateRefundPaymentFromCustodialAccountToLiquidityRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/CreateRefundPaymentFromCustodialAccountToLiquidityRequest
        description: Model that defines amount to transfer
      summary: >-
        Refund internal crypto from user custodial to Fortress Liquidity (Auth
        policies: InternalAdmin)
  /api/internal-admin/v1/custodial-accounts/from-ca-to-trading:
    post:
      parameters:
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No Content
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - InternalAdmin
      tags:
        - InternalAdmin
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateRefundPaymentFromCaToTradingRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRefundPaymentFromCaToTradingRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateRefundPaymentFromCaToTradingRequest'
        description: Model that defines amount to transfer
      summary: >-
        Refund internal crypto from end user custodial to Fortress Trading (Auth
        policies: InternalAdmin)
  /api/internal-admin/v1/custodial-accounts/from-trading-to-liquidity-provider:
    post:
      parameters:
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No Content
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - InternalAdmin
      tags:
        - InternalAdmin
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateRefundPaymentFromTradingToZpRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRefundPaymentFromTradingToZpRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateRefundPaymentFromTradingToZpRequest'
        description: Model that defines amount to transfer
      summary: >-
        Refund internal crypto from Fortress Trading to Liquidity Provider (Auth
        policies: InternalAdmin)
  /api/internal-admin/v1/custodial-accounts/helper-account:
    post:
      responses:
        '204':
          description: No content
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - InternalAdmin
      tags:
        - InternalAdmin
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateHelperCustodialAccountRequestModel'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHelperCustodialAccountRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateHelperCustodialAccountRequestModel'
        description: Create helper custodial account request model
      summary: >-
        Create helper account (fortress accounts as omnibus complementary
        accounts) (Auth policies: InternalAdmin)
  /api/internal-admin/v1/custodial-accounts/process-transfer-manually:
    post:
      parameters:
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No Content
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - InternalAdmin
      tags:
        - InternalAdmin
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/ManuallyProcessedTransferRequestModel'
          application/json:
            schema:
              $ref: '#/components/schemas/ManuallyProcessedTransferRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ManuallyProcessedTransferRequestModel'
        description: Model that defines manually processed transfer
      summary: >-
        Create a payment to store records about manually processed transfer
        (Auth policies: InternalAdmin)
  /api/internal-admin/v1/custodial-accounts/run-migration-job:
    post:
      parameters:
        - description: Organization identifier
          in: query
          name: organizationId
          schema:
            format: uuid
            type: string
          style: form
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No Content
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      security:
        - Bearer:
            - InternalAdmin
      tags:
        - InternalAdmin
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/InitiateMovementJobRequestModel'
          application/json:
            schema:
              $ref: '#/components/schemas/InitiateMovementJobRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/InitiateMovementJobRequestModel'
        description: InitiateMovementJobRequestModel
      summary: >-
        Run movementJob FromActivatedAccountToFiatOmnibusAccount or
        FromInactivatedAccountToFiatMigrationAccount (Auth policies:
        InternalAdmin)
  /api/internal-admin/v1/custodial-accounts/suspense/not-resolved-payments:
    get:
      parameters:
        - in: query
          name: PaymentType
          schema:
            $ref: '#/components/schemas/PaymentTypeToSuspenseAccount'
          style: form
        - description: Page count
          in: query
          name: Page
          schema:
            format: int32
            type: integer
          style: form
        - description: PageSize
          in: query
          name: PageSize
          schema:
            format: int32
            type: integer
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponseModelPageResponseModel'
          description: Success
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - InternalAdmin
      tags:
        - InternalAdmin
      summary: >-
        Retrieve list transactions of not resolved payments on suspense account
        (Auth policies: InternalAdmin)
  '/api/internal-admin/v1/custodial-accounts/suspense/payments/{paymentId}/resolve':
    post:
      parameters:
        - description: The payment identifier.
          in: path
          name: paymentId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResolvePaymentResponseModel'
          description: Success
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Client Error
      security:
        - Bearer:
            - InternalAdmin
      tags:
        - InternalAdmin
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/ResolvePaymentRequestModel'
          application/json:
            schema:
              $ref: '#/components/schemas/ResolvePaymentRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ResolvePaymentRequestModel'
        description: The resolve payment model.
      summary: 'Resolve payment on suspense account (Auth policies: InternalAdmin)'
  /api/internal-admin/v1/custodial-accounts/top-up-internal-omnibus-balance-from-check-deposit-source-account:
    post:
      parameters:
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No Content
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - InternalAdmin
      tags:
        - InternalAdmin
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/TopUpInternalOmnibusRequestModel'
          application/json:
            schema:
              $ref: '#/components/schemas/TopUpInternalOmnibusRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/TopUpInternalOmnibusRequestModel'
        description: Model that defines amount to transfer
      summary: >-
        Top up internal omnibus from Check Deposit Source account (Auth
        policies: InternalAdmin)
  /api/internal-admin/v1/custodial-accounts/top-up-internal-omnibus-balance-from-liquidity-provider-account:
    post:
      parameters:
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No Content
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - InternalAdmin
      tags:
        - InternalAdmin
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/TopUpInternalOmnibusRequestModel'
          application/json:
            schema:
              $ref: '#/components/schemas/TopUpInternalOmnibusRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/TopUpInternalOmnibusRequestModel'
        description: Model that defines amount to transfer
      summary: >-
        Top up internal omnibus from Liquidity Provider account (Auth policies:
        InternalAdmin)
  '/api/internal-admin/v1/custodial-accounts/top-up-internal-omnibus-balance-from-user-bank-account/{custodialAccountId}':
    post:
      parameters:
        - description: Id that represents user CA
          in: path
          name: custodialAccountId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No Content
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - InternalAdmin
      tags:
        - InternalAdmin
      summary: >-
        Top up internal omnibus from User Bank account (Auth policies:
        InternalAdmin)
  '/api/internal-admin/v1/custodial-accounts/{custodialAccountId}/non-api-clearing-account':
    get:
      parameters:
        - description: The custodial account identifier.
          in: path
          name: custodialAccountId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonApiClearingAccountDataModel'
          description: Non-Api clearing account data model
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: >-
            Custodial account was not found or the custodial account does not
            have non-API bank.
      security:
        - Bearer:
            - InternalAdmin
      tags:
        - InternalAdmin
      summary: 'Retrieve non-API clearing account data (Auth policies: InternalAdmin)'
    put:
      parameters:
        - description: The custodial account identifier.
          in: path
          name: custodialAccountId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No content response.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Custodial account was not found.
      security:
        - Bearer:
            - InternalAdmin
      tags:
        - InternalAdmin
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/NonApiClearingAccountDataModel'
          application/json:
            schema:
              $ref: '#/components/schemas/NonApiClearingAccountDataModel'
          text/json:
            schema:
              $ref: '#/components/schemas/NonApiClearingAccountDataModel'
        description: The configuration model.
      summary: >-
        Configure non-API clearing account data on custodial account inside
        Fortress (Auth policies: InternalAdmin)
  '/api/internal-admin/v1/custodial-accounts/{custodialAccountId}/replace-omnibus':
    put:
      parameters:
        - description: Custodial account identifier.
          in: path
          name: custodialAccountId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No content
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      security:
        - Bearer:
            - InternalAdmin
      tags:
        - InternalAdmin
      summary: 'Replace omnibus account banking data (Auth policies: InternalAdmin)'
  '/api/internal-admin/v1/force-complete-transaction/{transactionId}':
    patch:
      parameters:
        - description: The transaction identifier.
          in: path
          name: transactionId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponseModel'
          description: Success
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      security:
        - Bearer:
            - InternalAdmin
      tags:
        - InternalAdmin
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/ForceCompleteTransactionRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ForceCompleteTransactionRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ForceCompleteTransactionRequest'
        description: Request model for transaction force completion
      summary: >-
        Force successful transaction completion for failed payment (Auth
        policies: InternalAdmin)
  /api/internal-admin/v1/import-tp-recon-payments/csv:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: Success
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - InternalAdmin
      tags:
        - InternalAdmin
      requestBody:
        content:
          multipart/form-data:
            encoding:
              file:
                style: form
            schema:
              properties:
                file:
                  items:
                    format: binary
                    type: string
                  type: array
              type: object
      summary: >-
        Import file with payments to try find missing payments or link existing
        (Auth policies: InternalAdmin)
  /api/internal-admin/v1/invalidate-cache:
    post:
      responses:
        '204':
          description: No Content
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - InternalAdmin
      tags:
        - InternalAdmin
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/InvalidateCacheModel'
          application/json:
            schema:
              $ref: '#/components/schemas/InvalidateCacheModel'
          text/json:
            schema:
              $ref: '#/components/schemas/InvalidateCacheModel'
        description: Specify which cache need to be invalidated
      summary: 'Invalidate cache immediately (Auth policies: InternalAdmin)'
  '/api/internal-admin/v1/manually-process/crypto-deposit/{paymentId}/move-pending-to-disbursable':
    post:
      parameters:
        - description: Payment identifier
          in: path
          name: paymentId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No Content
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
      security:
        - Bearer:
            - InternalAdmin
      tags:
        - ManuallyProcess
      summary: >-
        Move pending to disbursable in case crypto deposit failing (Auth
        policies: InternalAdmin)
  '/api/internal-admin/v1/manually-process/wire-withdrawal/{paymentId}/remove-locked-money-from-account':
    post:
      parameters:
        - description: Payment identifier
          in: path
          name: paymentId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          description: Success
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
      security:
        - Bearer:
            - InternalAdmin
      tags:
        - ManuallyProcess
      summary: >-
        Remove locked money from account in case wire withdrawal failing and
        processing manually through TP API (Auth policies: InternalAdmin)
  '/api/internal-admin/v1/manually-process/wire-withdrawal/{paymentId}/unlock-and-return-money':
    post:
      parameters:
        - description: Payment identifier
          in: path
          name: paymentId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          description: Success
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
      security:
        - Bearer:
            - InternalAdmin
      tags:
        - ManuallyProcess
      summary: >-
        Unlock and return money to user while wire withdrawal failing (Auth
        policies: InternalAdmin)
  /api/internal-admin/v1/organizations:
    get:
      parameters:
        - description: AdminConfiguration or Permissions filter
          in: query
          name: Include
          schema:
            items:
              $ref: '#/components/schemas/InternalAdminOrganizationRelation'
            type: array
          style: form
        - description: Page count
          in: query
          name: Page
          schema:
            format: int32
            type: integer
          style: form
        - description: PageSize
          in: query
          name: PageSize
          schema:
            format: int32
            type: integer
          style: form
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationAdminResponseModelPageResponseModel
          description: Organization response model.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - InternalAdmin
      tags:
        - InternalAdmin
      summary: 'Retrieve the organizations. (Auth policies: InternalAdmin)'
  '/api/internal-admin/v1/organizations/{organizationId}':
    get:
      parameters:
        - description: The organization identifier.
          in: path
          name: organizationId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: What properties to include.
          in: query
          name: include
          schema:
            items:
              $ref: '#/components/schemas/InternalAdminOrganizationRelation'
            type: array
          style: form
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationAdminResponseModel'
          description: Organization response models.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Organization was not found.
      security:
        - Bearer:
            - InternalAdmin
      tags:
        - InternalAdmin
      summary: 'Retrieve the organization. (Auth policies: InternalAdmin)'
  '/api/internal-admin/v1/organizations/{organizationId}/custodial-account':
    post:
      parameters:
        - description: Custodial account organization id.
          in: path
          name: organizationId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustodialAccountsResponseModel'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Conflict
      security:
        - Bearer:
            - InternalAdmin
      tags:
        - InternalAdmin
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateCustodialAccountRequestModel'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustodialAccountRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateCustodialAccountRequestModel'
        description: Create custodial account request model.
      summary: >-
        Create the new custodial account without age validation. (Auth policies:
        InternalAdmin)
  '/api/internal-admin/v1/organizations/{organizationId}/inactivate-provider-specific/{provider}':
    post:
      parameters:
        - description: The organization identifier.
          in: path
          name: organizationId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: Provider.
          in: path
          name: provider
          required: true
          schema:
            $ref: '#/components/schemas/FiatIntegrationServiceProvider'
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No content response.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User with such auth identifier was not found.
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Organization was not found.
      security:
        - Bearer:
            - InternalAdmin
      tags:
        - InternalAdmin
      summary: 'Inactivate ProviderSpecific Accounts. (Auth policies: InternalAdmin)'
  '/api/internal-admin/v1/organizations/{organizationId}/settlement-accounts-configuration':
    get:
      parameters:
        - description: The organization identifier.
          in: path
          name: organizationId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SettlementAccountsConfigurationResponseModelCollectionResponseModel
          description: Array of SettlementAccountsConfigurationResponseModel.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User with such auth identifier was not found.
        '403':
          description: Forbidden
      security:
        - Bearer:
            - InternalAdmin
      tags:
        - InternalAdmin
      summary: >-
        Get settlement accounts configuration for the specified organization.
        (Auth policies: InternalAdmin)
  '/api/internal-admin/v1/organizations/{organizationId}/settlement-accounts-configuration/{custodialAccountId}':
    put:
      parameters:
        - description: The organization identifier.
          in: path
          name: organizationId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The custodial account identifier.
          in: path
          name: custodialAccountId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No content response.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User with such auth identifier was not found.
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Organization was not found.
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Asset is already configured for another settlement account.
      security:
        - Bearer:
            - InternalAdmin
      tags:
        - InternalAdmin
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/SettlementAccountsConfigurationRequestModel'
          application/json:
            schema:
              $ref: '#/components/schemas/SettlementAccountsConfigurationRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/SettlementAccountsConfigurationRequestModel'
        description: The configuration model.
      summary: >-
        Configure settlement account for the specific list of assets per
        organization. (Auth policies: InternalAdmin)
  /api/internal-admin/v1/payments/process-stuck-payment:
    post:
      parameters:
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No Content
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - InternalAdmin
      tags:
        - InternalAdmin
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProcessStuckPaymentRequestModel'
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessStuckPaymentRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ProcessStuckPaymentRequestModel'
        description: Payments that we want to process
      summary: 'Retry or abort saga step that stuck (Auth policies: InternalAdmin)'
  '/api/internal-admin/v1/payments/{paymentId}/funds-clawback':
    post:
      parameters:
        - description: Payment id
          in: path
          name: paymentId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '202':
          description: Accepted
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - InternalAdmin
      tags:
        - InternalAdmin
      summary: 'Return funds from custodial account (Auth policies: InternalAdmin)'
  /api/internal-admin/v1/retry-transactions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TransactionResponseModel'
                type: array
          description: Success
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - InternalAdmin
      tags:
        - InternalAdmin
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/RetryTradingRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/RetryTradingRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/RetryTradingRequest'
        description: Retry request
      summary: 'Retry trading for specified transactions. (Auth policies: InternalAdmin)'
  /api/internal-admin/v1/sync-auth0:
    post:
      parameters:
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No content response.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - InternalAdmin
      tags:
        - InternalAdmin
      summary: 'Sync all orgs metadata with Auth0. (Auth policies: InternalAdmin)'
  '/api/internal-admin/v1/{organizationId}/sync-auth0':
    post:
      parameters:
        - description: The organization identifier.
          in: path
          name: organizationId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No content response.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - InternalAdmin
      tags:
        - InternalAdmin
      summary: 'Sync org metadata with Auth0. (Auth policies: InternalAdmin)'
  '/api/ops/v1/clearing-account-config/{organizationId}':
    get:
      parameters:
        - description: Organization identifier.
          in: path
          name: organizationId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClearingAccountsConfigResponseModel'
          description: Success
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      security:
        - Bearer:
            - Ops
      tags:
        - Ops
      summary: 'Get clearing accounts per organization (Auth policies: Ops)'
  '/api/ops/v1/clearing-account-config/{organizationId}/{paymentType}':
    delete:
      parameters:
        - description: Organization identifier.
          in: path
          name: organizationId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: Payment type.
          in: path
          name: paymentType
          required: true
          schema:
            $ref: '#/components/schemas/PaymentTypeForClearingAccount'
          style: simple
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - Ops
      tags:
        - Ops
      summary: >-
        Delete clearing account for payment type per organization (Auth
        policies: Ops)
    put:
      parameters:
        - description: Organization identifier.
          in: path
          name: organizationId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: Payment type.
          in: path
          name: paymentType
          required: true
          schema:
            $ref: '#/components/schemas/PaymentTypeForClearingAccount'
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClearingAccountsConfigResponseModel'
          description: Success
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      security:
        - Bearer:
            - Ops
      tags:
        - Ops
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/ClearingAccountsConfigRequestModel'
          application/json:
            schema:
              $ref: '#/components/schemas/ClearingAccountsConfigRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ClearingAccountsConfigRequestModel'
        description: Request model to set clearing accounts config per organization
      summary: 'Set clearing accounts per organization (Auth policies: Ops)'
  /api/ops/v1/custodial-accounts:
    get:
      parameters:
        - in: query
          name: OrganizationId
          schema:
            format: uuid
            type: string
          style: form
        - in: query
          name: OwnerIdentityId
          schema:
            format: uuid
            type: string
          style: form
        - description: Page count
          in: query
          name: Page
          schema:
            format: int32
            type: integer
          style: form
        - description: PageSize
          in: query
          name: PageSize
          schema:
            format: int32
            type: integer
          style: form
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustodialAccountsResponseModelPageResponseModel
          description: Response with custodial accounts page.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - Ops
      tags:
        - Ops
      summary: >-
        Retrieve the filtered, paged list with custodial accounts. (Auth
        policies: Ops)
  /api/ops/v1/custodial-accounts/crypto-buy-refunds:
    post:
      parameters:
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No Content
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - Ops
      tags:
        - Ops
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateRefundPaymentForBuyCryptoModel'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRefundPaymentForBuyCryptoModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateRefundPaymentForBuyCryptoModel'
        description: Model that defines amount to transfer
      summary: >-
        Refund internal from Liquidity Provider to end user custodial (Auth
        policies: Ops)
  /api/ops/v1/custodial-accounts/crypto-sell-refunds:
    post:
      parameters:
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No Content
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - Ops
      tags:
        - Ops
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateRefundPaymentForCryptoSellRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRefundPaymentForCryptoSellRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateRefundPaymentForCryptoSellRequest'
        description: Model that defines amount to transfer
      summary: >-
        Refund internal crypto from Liquidity Provider to end user custodial
        (Auth policies: Ops)
  /api/ops/v1/custodial-accounts/from-ca-to-liquidity:
    post:
      parameters:
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No Content
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - Ops
      tags:
        - Ops
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/CreateRefundPaymentFromCustodialAccountToLiquidityRequest
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CreateRefundPaymentFromCustodialAccountToLiquidityRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/CreateRefundPaymentFromCustodialAccountToLiquidityRequest
        description: Model that defines amount to transfer
      summary: >-
        Refund internal crypto from user custodial to Fortress Liquidity (Auth
        policies: Ops)
  /api/ops/v1/custodial-accounts/from-ca-to-trading:
    post:
      parameters:
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No Content
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - Ops
      tags:
        - Ops
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateRefundPaymentFromCaToTradingRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRefundPaymentFromCaToTradingRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateRefundPaymentFromCaToTradingRequest'
        description: Model that defines amount to transfer
      summary: >-
        Refund internal crypto from end user custodial to Fortress Trading (Auth
        policies: Ops)
  /api/ops/v1/custodial-accounts/from-trading-to-liquidity-provider:
    post:
      parameters:
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No Content
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - Ops
      tags:
        - Ops
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateRefundPaymentFromTradingToZpRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRefundPaymentFromTradingToZpRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateRefundPaymentFromTradingToZpRequest'
        description: Model that defines amount to transfer
      summary: >-
        Refund internal crypto from Fortress Trading to Liquidity Provider (Auth
        policies: Ops)
  /api/ops/v1/custodial-accounts/process-transfer-manually:
    post:
      parameters:
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No Content
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - Ops
      tags:
        - Ops
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/ManuallyProcessedTransferRequestModel'
          application/json:
            schema:
              $ref: '#/components/schemas/ManuallyProcessedTransferRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ManuallyProcessedTransferRequestModel'
        description: Model that defines manually processed transfer
      summary: >-
        Create a payment to store records about manually processed transfer
        (Auth policies: Ops)
  '/api/ops/v1/custodial-accounts/{custodialAccountId}/close':
    patch:
      parameters:
        - description: Custodial account identifier
          in: path
          name: custodialAccountId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No Content
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - Ops
      tags:
        - Ops
      summary: 'Close custodial account (Auth policies: Ops)'
  '/api/ops/v1/custodial-accounts/{custodialAccountId}/non-api-clearing-account':
    get:
      parameters:
        - description: The custodial account identifier.
          in: path
          name: custodialAccountId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonApiClearingAccountDataModel'
          description: Non-Api clearing account data model
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: >-
            Custodial account was not found or the custodial account does not
            have non-API bank.
      security:
        - Bearer:
            - Ops
      tags:
        - Ops
      summary: 'Retrieve non-API clearing account data (Auth policies: Ops)'
  '/api/ops/v1/custodial-accounts/{custodialAccountId}/resume':
    patch:
      parameters:
        - description: Custodial account identifier
          in: path
          name: custodialAccountId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No Content
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - Ops
      tags:
        - Ops
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CustodialAccountSuspensionModel'
          application/json:
            schema:
              $ref: '#/components/schemas/CustodialAccountSuspensionModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CustodialAccountSuspensionModel'
        description: Suspension request
      summary: 'Resume custodial account (Auth policies: Ops)'
  '/api/ops/v1/custodial-accounts/{custodialAccountId}/set-provider-cross-organization-account':
    patch:
      parameters:
        - description: Custodial account identifier
          in: path
          name: custodialAccountId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          description: Success
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - Ops
      tags:
        - Ops
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/SetProviderCrossOrganizationAccountRequestModel
          application/json:
            schema:
              $ref: >-
                #/components/schemas/SetProviderCrossOrganizationAccountRequestModel
          text/json:
            schema:
              $ref: >-
                #/components/schemas/SetProviderCrossOrganizationAccountRequestModel
        description: Sets IsMain flag for specific provider base on asset type and asset
      summary: >-
        Set main provider specific accounts for cross organization accounts
        (Auth policies: Ops)
  '/api/ops/v1/custodial-accounts/{custodialAccountId}/suspend':
    patch:
      parameters:
        - description: Custodial account identifier
          in: path
          name: custodialAccountId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No Content
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - Ops
      tags:
        - Ops
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CustodialAccountSuspensionModel'
          application/json:
            schema:
              $ref: '#/components/schemas/CustodialAccountSuspensionModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CustodialAccountSuspensionModel'
        description: Suspension request
      summary: 'Suspend custodial account (Auth policies: Ops)'
  '/api/ops/v1/custodial-accounts/{custodialAccountId}/update-cross-organization-account':
    patch:
      parameters:
        - description: Custodial account identifier
          in: path
          name: custodialAccountId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No Content
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - Ops
      tags:
        - Ops
      summary: 'Update cross organization account (Auth policies: Ops)'
  '/api/ops/v1/force-complete-transaction/{transactionId}':
    patch:
      parameters:
        - description: The transaction identifier.
          in: path
          name: transactionId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponseModel'
          description: Success
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      security:
        - Bearer:
            - Ops
      tags:
        - Ops
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/ForceCompleteTransactionRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ForceCompleteTransactionRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ForceCompleteTransactionRequest'
        description: Request model for transaction force completion
      summary: >-
        Force successful transaction completion for failed payment (Auth
        policies: Ops)
  /api/ops/v1/fortress-payments-data/trades:
    get:
      parameters:
        - description: Filter by payment identifier
          in: query
          name: PaymentId
          schema:
            format: uuid
            type: string
          style: form
        - description: Filter by transaction group identifier
          in: query
          name: TransactionGroupId
          schema:
            format: uuid
            type: string
          style: form
        - description: Filter by transaction identifier
          in: query
          name: MainTransactionId
          schema:
            format: uuid
            type: string
          style: form
        - description: Filter by FromAsset
          in: query
          name: FromAsset
          schema:
            $ref: '#/components/schemas/ModelAssetFiatType'
          style: form
        - description: Filter by ToAsset
          in: query
          name: ToAsset
          schema:
            $ref: '#/components/schemas/ModelAssetFiatType'
          style: form
        - description: Filter by network
          in: query
          name: Network
          schema:
            $ref: '#/components/schemas/ModelNetworkChain'
          style: form
        - description: Filter by transaction status
          in: query
          name: MainTransactionStatus
          schema:
            $ref: '#/components/schemas/TransactionStatus'
          style: form
        - description: Filter by ZebPay order identifier
          in: query
          name: ZebPayOrderId
          schema:
            format: uuid
            type: string
          style: form
        - description: Return all records with ZebPay order executed successfully
          in: query
          name: ZebPayOrderExecutedSuccessfully
          schema:
            type: boolean
          style: form
        - description: Return all records that Have transfers that need resolving
          in: query
          name: HasTransfersThatNeedResolving
          schema:
            type: boolean
          style: form
        - description: Return all records that are waiting for ZebPay balance
          in: query
          name: IsWaitingForZebPayBalance
          schema:
            type: boolean
          style: form
        - description: Page count
          in: query
          name: Page
          schema:
            format: int32
            type: integer
          style: form
        - description: PageSize
          in: query
          name: PageSize
          schema:
            format: int32
            type: integer
          style: form
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/FortressPaymentBaseDataResponseModelPageResponseModel
          description: Fortress payment data page model.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User with such auth identifier was not found.
        '403':
          description: Forbidden
      security:
        - Bearer:
            - Ops
      tags:
        - Ops
      summary: 'Return more details  about trades. (Auth policies: Ops)'
  '/api/ops/v1/fortress-payments-data/trades/{mainTransactionId}':
    get:
      parameters:
        - description: Main transaction identifier.
          in: path
          name: mainTransactionId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FortressPaymentResponseModel'
          description: Fortress payment data response model.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User with such auth identifier was not found.
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Fortress payment was not found.
      security:
        - Bearer:
            - Ops
      tags:
        - Ops
      summary: >-
        Return more detailed info about particular transfer. (Auth policies:
        Ops)
  '/api/ops/v1/fortress-payments-data/transactions/{transactionId}':
    get:
      parameters:
        - description: The transaction identifier.
          in: path
          name: transactionId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionWithPartsResponseModel'
          description: Transaction with parts response model.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Transaction was not found.
      security:
        - Bearer:
            - Ops
      tags:
        - Ops
      summary: 'Get a list of transaction parts (Auth policies: Ops)'
  /api/ops/v1/fortress-wire-settlement/international-wires:
    get:
      parameters:
        - description: Filtering status (required due to big amount of data)
          in: query
          name: Status
          required: true
          schema:
            $ref: '#/components/schemas/InternationalWireStatus'
          style: form
        - description: Page count
          in: query
          name: Page
          schema:
            description: Page count
            format: int32
            type: integer
          style: form
        - description: PageSize
          in: query
          name: PageSize
          schema:
            description: PageSize
            format: int32
            type: integer
          style: form
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InternationalWireResponseModelPageResponseModel
          description: Success
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - Ops
      tags:
        - Ops
      summary: 'Get international wires withdrawals info (Auth policies: Ops)'
  '/api/ops/v1/fortress-wire-settlement/international-wires/{id}':
    patch:
      parameters:
        - description: Payment identifier of international wire
          in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          description: Success
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      security:
        - Bearer:
            - Ops
      tags:
        - Ops
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/InternationalWireStatusUpdateModel'
          application/json:
            schema:
              $ref: '#/components/schemas/InternationalWireStatusUpdateModel'
          text/json:
            schema:
              $ref: '#/components/schemas/InternationalWireStatusUpdateModel'
        description: >-
          International wire update model containing the new status for the
          international wire
      summary: >-
        Update the status of an international wire payment and its corresponding
        main transaction (Auth policies: Ops)
  /api/ops/v1/import/csv:
    post:
      parameters:
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          description: Success
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportedBalanceResponse'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - Ops
      tags:
        - Ops
      requestBody:
        content:
          multipart/form-data:
            encoding:
              file:
                style: form
            schema:
              properties:
                file:
                  items:
                    format: binary
                    type: string
                  type: array
              type: object
      summary: 'Import file with balances (Auth policies: Ops)'
  /api/ops/v1/liquidity-provider-orders-data/orders:
    get:
      parameters:
        - description: Order asset
          in: query
          name: Asset
          schema:
            $ref: '#/components/schemas/ModelAssetFiatType'
          style: form
        - description: Network
          in: query
          name: Network
          schema:
            $ref: '#/components/schemas/ModelNetworkChain'
          style: form
        - description: Order identifier
          in: query
          name: OrderId
          schema:
            format: uuid
            type: string
          style: form
        - description: Return all records that are waiting for balance
          in: query
          name: IsWaitingForBalance
          schema:
            type: boolean
          style: form
        - description: Page count
          in: query
          name: Page
          schema:
            format: int32
            type: integer
          style: form
        - description: PageSize
          in: query
          name: PageSize
          schema:
            format: int32
            type: integer
          style: form
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/LiquidityProviderOrdersDataResponseModelPageResponseModel
          description: Orders data page model.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User with such auth identifier was not found.
        '403':
          description: Forbidden
      security:
        - Bearer:
            - Ops
      tags:
        - Ops
      summary: 'Return more details  about orders. (Auth policies: Ops)'
  '/api/ops/v1/liquidity-provider-orders-data/orders/{id}':
    get:
      parameters:
        - description: Order identifier.
          in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiquidityProviderOrderResponseModel'
          description: Order data response model.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User with such auth identifier was not found.
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Order was not found.
      security:
        - Bearer:
            - Ops
      tags:
        - Ops
      summary: 'Return more detailed info about particular order. (Auth policies: Ops)'
  /api/ops/v1/organizations:
    get:
      parameters:
        - description: AdminConfiguration or Permissions filter
          in: query
          name: Include
          schema:
            items:
              $ref: '#/components/schemas/InternalAdminOrganizationRelation'
            type: array
          style: form
        - description: Page count
          in: query
          name: Page
          schema:
            format: int32
            type: integer
          style: form
        - description: PageSize
          in: query
          name: PageSize
          schema:
            format: int32
            type: integer
          style: form
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationAdminResponseModelPageResponseModel
          description: Organization response model.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - Ops
      tags:
        - Ops
      summary: 'Retrieve the organizations. (Auth policies: Ops)'
  '/api/ops/v1/organizations/{orgId}/custody-providers-configurations':
    get:
      parameters:
        - description: The organization identifier.
          in: path
          name: orgId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustodyProviderConfigurationModelCollectionResponseModel
          description: Custody provider configuration response model.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - Ops
      tags:
        - Ops
      summary: 'Retrieve the custody providers configurations. (Auth policies: Ops)'
  '/api/ops/v1/organizations/{orgId}/custody-providers-configurations/{assetType}':
    put:
      parameters:
        - description: The organization identifier.
          in: path
          name: orgId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: Asset type.
          in: path
          name: assetType
          required: true
          schema:
            $ref: '#/components/schemas/ModelAssetType'
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustodyProviderConfigurationModel'
          description: Custody provider configuration response model.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - Ops
      tags:
        - Ops
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CustodyProviderConfigurationModel'
          application/json:
            schema:
              $ref: '#/components/schemas/CustodyProviderConfigurationModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CustodyProviderConfigurationModel'
        description: Custody provider configuration model.
      summary: >-
        Add or update the configuration for particular asset type. (Auth
        policies: Ops)
  '/api/ops/v1/organizations/{orgId}/price-markup-configuration':
    get:
      parameters:
        - description: Organization id
          in: path
          name: orgId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarkupResponseModel'
          description: Success
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      security:
        - Bearer:
            - Ops
      tags:
        - Ops
      summary: >-
        Get price markup for organization level and trading pair level (Auth
        policies: Ops)
    put:
      parameters:
        - description: The organization identifier.
          in: path
          name: orgId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No content response.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User with such auth identifier was not found.
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Organization was not found.
      security:
        - Bearer:
            - Ops
      tags:
        - Ops
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/MarkupRequestModel'
          application/json:
            schema:
              $ref: '#/components/schemas/MarkupRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/MarkupRequestModel'
        description: The configuration model.
      summary: 'Configure price markup. (Auth policies: Ops)'
  '/api/ops/v1/organizations/{orgId}/price-markup-configuration/{tradingPair}':
    put:
      parameters:
        - description: Organization id
          in: path
          name: orgId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: Trading pair
          in: path
          name: tradingPair
          required: true
          schema:
            description: Trading pair
            minLength: 1
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradingPairMarkupModel'
          description: Success
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      security:
        - Bearer:
            - Ops
      tags:
        - Ops
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/TradingPairMarkupRequestModel'
          application/json:
            schema:
              $ref: '#/components/schemas/TradingPairMarkupRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/TradingPairMarkupRequestModel'
        description: Trading pair markup request
      summary: 'Add or replace trading pair markup configuration (Auth policies: Ops)'
  '/api/ops/v1/organizations/{organizationId}':
    get:
      parameters:
        - description: The organization identifier.
          in: path
          name: organizationId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: What properties to include.
          in: query
          name: include
          schema:
            items:
              $ref: '#/components/schemas/InternalAdminOrganizationRelation'
            type: array
          style: form
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationAdminResponseModel'
          description: Organization response models.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Organization was not found.
      security:
        - Bearer:
            - Ops
      tags:
        - Ops
      summary: 'Retrieve the organization. (Auth policies: Ops)'
  '/api/ops/v1/organizations/{organizationId}/payment-approval-configuration':
    get:
      parameters:
        - description: The organization identifier.
          in: path
          name: organizationId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentApprovalConfigurationModel'
          description: Payment approval configuration response model.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      security:
        - Bearer:
            - Ops
      tags:
        - Ops
      summary: >-
        Get payment approval configuration for organization. (Auth policies:
        Ops)
    patch:
      parameters:
        - description: The organization identifier.
          in: path
          name: organizationId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentApprovalConfigurationModel'
          description: Payment approval configuration response model.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      security:
        - Bearer:
            - Ops
      tags:
        - Ops
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/PaymentApprovalConfigurationModel'
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentApprovalConfigurationModel'
          text/json:
            schema:
              $ref: '#/components/schemas/PaymentApprovalConfigurationModel'
        description: Payment approval configuration model.
      summary: >-
        Add or update payment approval configuration for organization. (Auth
        policies: Ops)
  /api/ops/v1/retry-transactions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TransactionResponseModel'
                type: array
          description: Success
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - Ops
      tags:
        - Ops
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/RetryTradingRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/RetryTradingRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/RetryTradingRequest'
        description: Retry request
      summary: 'Retry trading for specified transactions. (Auth policies: Ops)'
  '/api/ops/v1/transactions/{transactionId}/mt103':
    get:
      parameters:
        - description: The transaction identifier
          in: path
          name: transactionId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mt103ReferenceResponseModel'
          description: MT103 reference was successfully retrieved
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User with such auth identifier was not found
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: MT103 reference is not found
      security:
        - Bearer:
            - Ops
      tags:
        - Ops
      summary: 'Get MT103 reference (Auth policies: Ops)'
    put:
      parameters:
        - description: The transaction identifier
          in: path
          name: transactionId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: MT103 reference was successfully created or replaced
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request model data
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User with such auth identifier was not found
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: >-
            Transaction is not found or PaymentType is not
            InternationalWireWithdrawal
      security:
        - Bearer:
            - Ops
      tags:
        - Ops
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Mt103ReferenceBaseModel'
          application/json:
            schema:
              $ref: '#/components/schemas/Mt103ReferenceBaseModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Mt103ReferenceBaseModel'
        description: The MT103 reference data
      summary: >-
        Add or replace MT103 reference for InternationalWireWithdrawal
        transaction (Auth policies: Ops)
  /api/ops/v1/transfers/precious-metals:
    post:
      responses:
        '200':
          description: Success
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - Ops
      tags:
        - Ops
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreatePreciousMetalsTransferRequestModel'
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePreciousMetalsTransferRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CreatePreciousMetalsTransferRequestModel'
        description: Create deposit for precious metals model
      summary: >-
        Admin endpoint for managing precious metals deposits/withdrawal (Auth
        policies: Ops)
  /api/organization/v1/current-organization:
    get:
      parameters:
        - description: The included properties.
          in: query
          name: include
          schema:
            items:
              $ref: '#/components/schemas/UserOrganizationRelation'
            type: array
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponseModel'
          description: Organization response models.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: []
      tags:
        - CurrentOrganization
      summary: Retrieve the current organization. (Auth)
    patch:
      parameters:
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No content response.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: []
      tags:
        - CurrentOrganization
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrganizationPatchModel'
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationPatchModel'
          text/json:
            schema:
              $ref: '#/components/schemas/OrganizationPatchModel'
        description: The patch model.
      summary: Update the current organization. (Auth)
  /api/organization/v1/current-organization/readonly:
    post:
      parameters:
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponseModel'
          description: Organization response model.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: []
      tags:
        - CurrentOrganization
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReadonlyUserRequestModel'
          application/json:
            schema:
              $ref: '#/components/schemas/ReadonlyUserRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ReadonlyUserRequestModel'
        description: The model.
      summary: Create a read-only user. (Auth)
  /api/organization/v1/current-organization/webhook-config:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookConfigResponseModel'
          description: Webhook config response models.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Webhook config is not found.
      security:
        - Bearer: []
      tags:
        - CurrentOrganization
      summary: Retrieve the webhook configuration. (Auth)
    patch:
      parameters:
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: Webhook config is patched.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Webhook config is not found.
      security:
        - Bearer: []
      tags:
        - CurrentOrganization
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/WebhookConfigPatchModel'
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookConfigPatchModel'
          text/json:
            schema:
              $ref: '#/components/schemas/WebhookConfigPatchModel'
        description: The webhook config patch model
      summary: Patch the current webhook config. (Auth)
  /api/security-admin/v1/assets-to-allow-negative-balances:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetsToAllowNegativeBalancesForOmnibusResponse
          description: Non-Api clearing account data model
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      security:
        - Bearer:
            - SecurityAdmin
      tags:
        - SecurityAdmin
      summary: >-
        Retrieve configuration of assets to allow negative balances (Auth
        policies: SecurityAdmin)
  /api/security-admin/v1/endpoints-permissions-tree:
    get:
      parameters:
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: >-
                    #/components/schemas/EndpointAccessPermissionTreeNodesResponseModel
                type: array
          description: Success
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
      security:
        - Bearer:
            - SecurityAdmin
      tags:
        - EndpointsPermissionsTree
      summary: >-
        Retrieve hierarchy of endpoint access permissions (Auth policies:
        SecurityAdmin)
  '/api/security-admin/v1/endpoints-permissions-tree/{id}':
    patch:
      parameters:
        - description: Id
          in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EndpointAccessPermissionTreeNodesResponseModel
          description: Success
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      security:
        - Bearer:
            - SecurityAdmin
      tags:
        - EndpointsPermissionsTree
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/EndpointAccessPermissionTreeNodePatchModel'
          application/json:
            schema:
              $ref: '#/components/schemas/EndpointAccessPermissionTreeNodePatchModel'
          text/json:
            schema:
              $ref: '#/components/schemas/EndpointAccessPermissionTreeNodePatchModel'
        description: Patch request model
      summary: >-
        Patches endpoint access permission tree node (Auth policies:
        SecurityAdmin)
  /api/security-admin/v1/ops-users:
    get:
      parameters:
        - description: Roles filter
          in: query
          name: Include
          schema:
            items:
              $ref: '#/components/schemas/OpsUserRelation'
            type: array
          style: form
        - description: Page count
          in: query
          name: Page
          schema:
            format: int32
            type: integer
          style: form
        - description: PageSize
          in: query
          name: PageSize
          schema:
            format: int32
            type: integer
          style: form
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OpsUserWithIncludeResponseModelPageResponseModel
          description: Ops user response model.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - SecurityAdmin
      tags:
        - OpsUsers
      summary: 'Retrieve the ops users. (Auth policies: SecurityAdmin)'
    post:
      parameters:
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsUserResponseModel'
          description: Ops user response model.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Email and Name should be unique.
      security:
        - Bearer:
            - SecurityAdmin
      tags:
        - OpsUsers
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/OpsUserRequestModel'
          application/json:
            schema:
              $ref: '#/components/schemas/OpsUserRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/OpsUserRequestModel'
        description: The model.
      summary: 'Create the ops user. (Auth policies: SecurityAdmin)'
  '/api/security-admin/v1/ops-users/{id}':
    get:
      parameters:
        - description: The Ops user identifier.
          in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: What properties to include.
          in: query
          name: include
          schema:
            items:
              $ref: '#/components/schemas/OpsUserRelation'
            type: array
          style: form
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsUserWithIncludeResponseModel'
          description: Ops user response models.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Ops user not found.
      security:
        - Bearer:
            - SecurityAdmin
      tags:
        - OpsUsers
      summary: 'Retrieve the ops user. (Auth policies: SecurityAdmin)'
    patch:
      parameters:
        - description: The ops user identifier.
          in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No content response.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Ops user not found.
      security:
        - Bearer:
            - SecurityAdmin
      tags:
        - OpsUsers
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/OpsUserPatchModel'
          application/json:
            schema:
              $ref: '#/components/schemas/OpsUserPatchModel'
          text/json:
            schema:
              $ref: '#/components/schemas/OpsUserPatchModel'
        description: The patch model.
      summary: 'Patch the ops users. (Auth policies: SecurityAdmin)'
  '/api/security-admin/v1/ops-users/{id}/password':
    put:
      parameters:
        - description: The ops user identifier.
          in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No content response.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Ops user not found.
      security:
        - Bearer:
            - SecurityAdmin
      tags:
        - OpsUsers
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateOpsUserPasswordRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOpsUserPasswordRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateOpsUserPasswordRequest'
        description: The request.
      summary: 'Update the ops user password. (Auth policies: SecurityAdmin)'
  '/api/security-admin/v1/ops-users/{id}/roles':
    get:
      parameters:
        - description: The Ops user identifier.
          in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiRoleResponseModel'
                type: array
          description: List of roles.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Ops user not found.
      security:
        - Bearer:
            - SecurityAdmin
      tags:
        - OpsUsers
      summary: 'Retrieve the ops user roles. (Auth policies: SecurityAdmin)'
    patch:
      parameters:
        - description: The ops user identifier.
          in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No content response.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Ops user not found.
      security:
        - Bearer:
            - SecurityAdmin
      tags:
        - OpsUsers
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/OpsUserPatchRolesModel'
          application/json:
            schema:
              $ref: '#/components/schemas/OpsUserPatchRolesModel'
          text/json:
            schema:
              $ref: '#/components/schemas/OpsUserPatchRolesModel'
        description: The patch roles model.
      summary: 'Setup roles for the ops users. (Auth policies: SecurityAdmin)'
  /api/security-admin/v1/organizations:
    get:
      parameters:
        - description: AdminConfiguration or Permissions filter
          in: query
          name: Include
          schema:
            items:
              $ref: '#/components/schemas/InternalAdminOrganizationRelation'
            type: array
          style: form
        - description: Page count
          in: query
          name: Page
          schema:
            format: int32
            type: integer
          style: form
        - description: PageSize
          in: query
          name: PageSize
          schema:
            format: int32
            type: integer
          style: form
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationAdminResponseModelPageResponseModel
          description: Organization response model.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - SecurityAdmin
      tags:
        - Organizations
      summary: 'Retrieve the organizations. (Auth policies: SecurityAdmin)'
    post:
      parameters:
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationAdminResponseModel'
          description: Organization response model.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - SecurityAdmin
      tags:
        - Organizations
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrganizationRequestModel'
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/OrganizationRequestModel'
        description: The model.
      summary: 'Create the organization. (Auth policies: SecurityAdmin)'
  '/api/security-admin/v1/organizations/{organizationId}':
    get:
      parameters:
        - description: The organization identifier.
          in: path
          name: organizationId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: What properties to include.
          in: query
          name: include
          schema:
            items:
              $ref: '#/components/schemas/InternalAdminOrganizationRelation'
            type: array
          style: form
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationAdminResponseModel'
          description: Organization response models.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Organization was not found.
      security:
        - Bearer:
            - SecurityAdmin
      tags:
        - Organizations
      summary: 'Retrieve the organization. (Auth policies: SecurityAdmin)'
    patch:
      parameters:
        - description: The organization identifier.
          in: path
          name: organizationId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No content response.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - SecurityAdmin
      tags:
        - Organizations
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrganizationPatchModel'
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationPatchModel'
          text/json:
            schema:
              $ref: '#/components/schemas/OrganizationPatchModel'
        description: The patch model.
      summary: 'Patch the organizations. (Auth policies: SecurityAdmin)'
  '/api/security-admin/v1/organizations/{organizationId}/admin-configuration':
    get:
      parameters:
        - description: The organization identifier.
          in: path
          name: organizationId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgAdminConfigurationResponseModel'
          description: Config response.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Organization was not found.
      security:
        - Bearer:
            - SecurityAdmin
      tags:
        - Organizations
      summary: >-
        Retrieve the organization admin configuration. (Auth policies:
        SecurityAdmin)
    patch:
      parameters:
        - description: The organization identifier.
          in: path
          name: organizationId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No content response.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Organization was not found.
      security:
        - Bearer:
            - SecurityAdmin
      tags:
        - Organizations
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrgAdminConfigurationPatchModel'
          application/json:
            schema:
              $ref: '#/components/schemas/OrgAdminConfigurationPatchModel'
          text/json:
            schema:
              $ref: '#/components/schemas/OrgAdminConfigurationPatchModel'
        description: Patch model
      summary: >-
        Patch the organization admin configuration. (Auth policies:
        SecurityAdmin)
  '/api/security-admin/v1/organizations/{organizationId}/password':
    put:
      parameters:
        - description: The organization identifier.
          in: path
          name: organizationId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No content response.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - SecurityAdmin
      tags:
        - Organizations
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateOrganizationPasswordRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrganizationPasswordRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateOrganizationPasswordRequest'
        description: The request.
      summary: 'Update the organization password. (Auth policies: SecurityAdmin)'
  '/api/security-admin/v1/organizations/{organizationId}/permissions':
    get:
      parameters:
        - description: The organization identifier.
          in: path
          name: organizationId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgPermissionsResponseModel'
          description: Organization permission model.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - SecurityAdmin
      tags:
        - Organizations
      summary: 'Retrieve the organization permissions. (Auth policies: SecurityAdmin)'
    patch:
      parameters:
        - description: The organization identifier.
          in: path
          name: organizationId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No content response.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer:
            - SecurityAdmin
      tags:
        - Organizations
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrgPermissionsPatchModel'
          application/json:
            schema:
              $ref: '#/components/schemas/OrgPermissionsPatchModel'
          text/json:
            schema:
              $ref: '#/components/schemas/OrgPermissionsPatchModel'
        description: The model.
      summary: 'Patch the organization permissions. (Auth policies: SecurityAdmin)'
  '/api/security-admin/v1/organizations/{organizationId}/roles':
    get:
      parameters:
        - description: The organization identifier.
          in: path
          name: organizationId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiRoleResponseModel'
                type: array
          description: List of roles.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Organization not found.
      security:
        - Bearer:
            - SecurityAdmin
      tags:
        - Organizations
      summary: 'Retrieve the organization roles. (Auth policies: SecurityAdmin)'
    patch:
      parameters:
        - description: The organization identifier.
          in: path
          name: organizationId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No content response.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Organization not found.
      security:
        - Bearer:
            - SecurityAdmin
      tags:
        - Organizations
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrganizationPatchRolesModel'
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationPatchRolesModel'
          text/json:
            schema:
              $ref: '#/components/schemas/OrganizationPatchRolesModel'
        description: The patch roles model.
      summary: 'Setup roles for the organizations. (Auth policies: SecurityAdmin)'
  /api/trust/v1/assets:
    get:
      parameters:
        - description: Page count
          in: query
          name: Page
          schema:
            format: int32
            type: integer
          style: form
        - description: PageSize
          in: query
          name: PageSize
          schema:
            format: int32
            type: integer
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomAssetResponseModelPageResponseModel'
          description: Success
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      security:
        - Bearer: []
      tags:
        - Assets
      summary: Retrieve a list of assets for specific organization. (Auth)
    post:
      parameters:
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomAssetResponseModel'
          description: Asset was successfully created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request model data
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: []
      tags:
        - Assets
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateCustomAssetRequestModel'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomAssetRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateCustomAssetRequestModel'
        description: The request model.
      summary: Create the asset. (Auth)
  '/api/trust/v1/assets/{id}':
    get:
      parameters:
        - description: Asset identifier
          in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomAssetResponseModel'
          description: Success
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      security:
        - Bearer: []
      tags:
        - Assets
      summary: Retrieve the asset by id (Auth)
    patch:
      parameters:
        - description: Asset id.
          in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomAssetResponseModel'
          description: Asset was successfully updated
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request model data
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Asset is not found
      security:
        - Bearer: []
      tags:
        - Assets
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateCustomAssetRequestModel'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomAssetRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomAssetRequestModel'
        description: The request model.
      summary: Patch the asset. (Auth)
  /api/trust/v1/available-transfer-methods:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferMethodCollectionResponseModel'
          description: Response with available transfer methods list
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: []
      tags:
        - AvailableTransferMethods
      summary: Retrieve a list with available transfer methods. (Auth)
  /api/trust/v1/custodial-accounts:
    get:
      parameters:
        - description: Filter by owner identity identifier
          in: query
          name: OwnerIdentityId
          schema:
            format: uuid
            type: string
          style: form
        - description: Return all records that have status
          in: query
          name: Status
          schema:
            $ref: '#/components/schemas/ModelCustodialAccountStatus'
          style: form
        - description: Return all records that have label
          in: query
          name: Label
          schema:
            $ref: '#/components/schemas/CustodialAccountLabel'
          style: form
        - description: Name of custodial account to filter by
          in: query
          name: CustodialAccountName
          schema:
            type: string
          style: form
        - description: Whether to sort in ascending order
          in: query
          name: SortingAscending
          schema:
            type: boolean
          style: form
        - description: Page count
          in: query
          name: Page
          schema:
            format: int32
            type: integer
          style: form
        - description: PageSize
          in: query
          name: PageSize
          schema:
            format: int32
            type: integer
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustodialAccountsResponseModelPageResponseModel
          description: Response with custodial accounts page.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: []
      tags:
        - CustodialAccounts
      summary: 'Retrieve the filtered, paged list with custodial accounts. (Auth)'
    post:
      parameters:
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustodialAccountsResponseModel'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Conflict
      security:
        - Bearer: []
      tags:
        - CustodialAccounts
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateCustodialAccountRequestModel'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustodialAccountRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateCustodialAccountRequestModel'
        description: Create custodial account request model.
      summary: Create the new custodial account. (Auth)
  /api/trust/v1/custodial-accounts/agreement:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustodialAccountAgreementResponseModel'
          description: Custodial account agreement
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User with such auth identifier was not found
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Custodial account agreement is not found
      security:
        - Bearer: []
      tags:
        - CustodialAccounts
      summary: Get custodial account agreement (Auth)
  /api/trust/v1/custodial-accounts/sandbox/start-incoming-wire-bulk:
    post:
      parameters:
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '202':
          description: Wire simulation was successfully created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request model data
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Custodial account was not found
      security:
        - Bearer: []
      tags:
        - CustodialAccounts
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/SandboxIncomingWireModel'
          application/json:
            schema:
              $ref: '#/components/schemas/SandboxIncomingWireModel'
          text/json:
            schema:
              $ref: '#/components/schemas/SandboxIncomingWireModel'
        description: The model
      summary: Create an incoming wire simulation on sandbox environments. (Auth)
  '/api/trust/v1/custodial-accounts/sandbox/{custodialAccountId}/start-incoming-ach':
    post:
      parameters:
        - description: The id of the custodial account where to start simulation.
          in: path
          name: custodialAccountId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '202':
          description: ACH simulation was successfully created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request model data
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Custodial account was not found
      security:
        - Bearer: []
      tags:
        - CustodialAccounts
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/SandboxIncomingAchModel'
          application/json:
            schema:
              $ref: '#/components/schemas/SandboxIncomingAchModel'
          text/json:
            schema:
              $ref: '#/components/schemas/SandboxIncomingAchModel'
        description: The model
      summary: Create an incoming ach simulation on sandbox environments. (Auth)
  '/api/trust/v1/custodial-accounts/sandbox/{custodialAccountId}/start-incoming-ach-withdrawal':
    post:
      parameters:
        - description: The id of the custodial account where to start simulation.
          in: path
          name: custodialAccountId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '202':
          description: Wire simulation was successfully created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request model data
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Custodial account was not found
      security:
        - Bearer: []
      tags:
        - CustodialAccounts
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/SandboxIncomingAchWithdrawalModel'
          application/json:
            schema:
              $ref: '#/components/schemas/SandboxIncomingAchWithdrawalModel'
          text/json:
            schema:
              $ref: '#/components/schemas/SandboxIncomingAchWithdrawalModel'
        description: The model
      summary: >-
        Create an incoming ach withdrawal simulation on sandbox environments.
        (Auth)
  '/api/trust/v1/custodial-accounts/sandbox/{custodialAccountId}/start-incoming-check':
    post:
      parameters:
        - description: The id of the custodial account where to start simulation.
          in: path
          name: custodialAccountId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '202':
          description: Check Deposit simulation was successfully created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request model data
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Custodial account was not found
      security:
        - Bearer: []
      tags:
        - CustodialAccounts
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/SandboxIncomingCheckModel'
          application/json:
            schema:
              $ref: '#/components/schemas/SandboxIncomingCheckModel'
          text/json:
            schema:
              $ref: '#/components/schemas/SandboxIncomingCheckModel'
        description: The model
      summary: Create incoming check deposit simulation on sandbox environments. (Auth)
  '/api/trust/v1/custodial-accounts/sandbox/{custodialAccountId}/start-incoming-wire':
    post:
      parameters:
        - description: The id of the custodial account where to start simulation.
          in: path
          name: custodialAccountId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '202':
          description: Wire simulation was successfully created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request model data
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Custodial account was not found
      security:
        - Bearer: []
      tags:
        - CustodialAccounts
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/SandboxIncomingWireModel'
          application/json:
            schema:
              $ref: '#/components/schemas/SandboxIncomingWireModel'
          text/json:
            schema:
              $ref: '#/components/schemas/SandboxIncomingWireModel'
        description: The model
      summary: Create an incoming wire simulation on sandbox environments. (Auth)
  '/api/trust/v1/custodial-accounts/{accountId}/beneficiaries':
    get:
      parameters:
        - description: Account identifier
          in: path
          name: accountId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BeneficiaryResponseModelCollectionResponseModel
          description: Response with collection of account beneficiaries
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Account was not found
      security:
        - Bearer: []
      tags:
        - CustodialAccounts
      summary: Retrieve the collection of account beneficiaries (Auth)
    put:
      parameters:
        - description: Account identifier
          in: path
          name: accountId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '202':
          description: Account beneficiaries overwritten successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request model data
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Account or one of identities was not found
      security:
        - Bearer: []
      tags:
        - CustodialAccounts
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/AccountBeneficiaryRequestModel'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/AccountBeneficiaryRequestModel'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/AccountBeneficiaryRequestModel'
              type: array
        description: New account beneficiaries
      summary: Overwrite beneficiaries for an account (Auth)
  '/api/trust/v1/custodial-accounts/{custodialAccountId}':
    get:
      parameters:
        - description: Custodial account identifier
          in: path
          name: custodialAccountId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustodialAccountsResponseModel'
          description: Success
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      security:
        - Bearer: []
      tags:
        - CustodialAccounts
      summary: Retrieve the custodial account by id. (Auth)
    patch:
      parameters:
        - description: Custodial account identifier
          in: path
          name: custodialAccountId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No Content
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: []
      tags:
        - CustodialAccounts
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateAccountStatusRequestModel'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccountStatusRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateAccountStatusRequestModel'
        description: Update account status request model
      summary: Update account status (Auth)
  '/api/trust/v1/custodial-accounts/{custodialAccountId}/balances':
    get:
      parameters:
        - description: Custodial account identifier
          in: path
          name: custodialAccountId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustodialAccountBalancesResponseModelCollectionResponseModel
          description: Success
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      security:
        - Bearer: []
      tags:
        - CustodialAccounts
      summary: Retrieve the custodial account balances. (Auth)
  '/api/trust/v1/custodial-accounts/{custodialAccountId}/crypto-deposit-instructions/{network}/{assetFiatType}':
    get:
      parameters:
        - description: Custodial account identifier
          in: path
          name: custodialAccountId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: Blockchain network
          in: path
          name: network
          required: true
          schema:
            $ref: '#/components/schemas/ModelNetworkChain'
          style: simple
        - description: Asset fiat type
          in: path
          name: assetFiatType
          required: true
          schema:
            $ref: '#/components/schemas/ModelAssetFiatType'
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CryptoInstructionsResponseModel'
          description: Success
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      security:
        - Bearer: []
      tags:
        - CustodialAccounts
      summary: Retrieve the crypto deposit instructions. (Auth)
  '/api/trust/v1/custodial-accounts/{custodialAccountId}/fiat-deposit-instructions/{assetFiatType}':
    get:
      parameters:
        - description: Custodial account identifier
          in: path
          name: custodialAccountId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: Asset fiat type
          in: path
          name: assetFiatType
          required: true
          schema:
            $ref: '#/components/schemas/ModelAssetFiatType'
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstructionsResponseModel'
          description: Success
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      security:
        - Bearer: []
      tags:
        - CustodialAccounts
      summary: Retrieve the fiat deposit instructions. (Auth)
  '/api/trust/v1/custodial-accounts/{custodialAccountId}/label':
    patch:
      parameters:
        - description: Custodial account identifier
          in: path
          name: custodialAccountId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No content
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User with such auth identifier was not found
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Custodial account is not found
      security:
        - Bearer: []
      tags:
        - CustodialAccounts
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateAccountLabelRequestModel'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccountLabelRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateAccountLabelRequestModel'
        description: Update account label request model
      summary: Update custodial account label (Auth)
  '/api/trust/v1/custodial-accounts/{custodialAccountId}/rename':
    patch:
      parameters:
        - description: Custodial account identifier
          in: path
          name: custodialAccountId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No Content
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: []
      tags:
        - CustodialAccounts
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateCustodialAccountNameRequestModel'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustodialAccountNameRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateCustodialAccountNameRequestModel'
        description: Update custodial account name request model
      summary: Update account name (Auth)
  '/api/trust/v1/custodial-accounts/{custodialAccountId}/withdraw-crypto':
    post:
      parameters:
        - description: Custodial account identifier
          in: path
          name: custodialAccountId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponseModel'
          description: Withdraw crypto process started successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request model data
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Withdraw crypto is allowed only for ZebPay custodial account
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Custodial account was not found
      security:
        - Bearer: []
      tags:
        - CustodialAccounts
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/WithdrawCryptoRequestModel'
          application/json:
            schema:
              $ref: '#/components/schemas/WithdrawCryptoRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/WithdrawCryptoRequestModel'
        description: Withdraw crypto request model
      summary: Withdraw crypto. (Auth)
  /api/trust/v1/external-accounts:
    get:
      parameters:
        - in: query
          name: IdentityId
          schema:
            format: uuid
            type: string
          style: form
        - description: Page count
          in: query
          name: Page
          schema:
            format: int32
            type: integer
          style: form
        - description: PageSize
          in: query
          name: PageSize
          schema:
            format: int32
            type: integer
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ExternalAccountResponseModelPageResponseModel
          description: Success
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: []
      tags:
        - ExternalAccounts
      summary: 'Retrieve the filtered, paged list with external accounts. (Auth)'
  /api/trust/v1/external-accounts/financial:
    post:
      parameters:
        - description: Session key
          in: header
          name: Session-Key
          schema:
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalAccountResponseModel'
          description: Funds transfer method was successfully created.
        '401':
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Identity id does not belong to current organization.
      security:
        - Bearer: []
      tags:
        - ExternalAccounts
      requestBody:
        content:
          application/*+json:
            examples:
              Mx:
                description: >-
                  FinancialAccountsProvider is optional and use only if default
                  provider need to be overridden
                summary: Mx
                value:
                  financialAccountId: <mx-accountId>
                  financialAccountsProvider: mx
                  identityId: 715820ed-2427-40fd-96d1-6aec7c56a068
              Plaid:
                description: >-
                  FinancialAccountsProvider is optional and use only if default
                  provider need to be overridden
                summary: Plaid
                value:
                  financialAccountId: <plaid-accountId>
                  financialAccountsProvider: plaid
                  identityId: 67ab893e-9076-45ba-8796-2b7a1d90f62d
                  itemId: <plaid-item-id>
              PlaidProcessorToken:
                description: >-
                  FinancialAccountsProvider is optional and use only if default
                  provider need to be overridden
                summary: PlaidProcessorToken
                value:
                  financialAccountsProvider: plaidProcessorToken
                  identityId: 903640b0-8892-49c9-8250-3e0f14775dc7
                  processorToken: <plaid-processor-token>
              PlainAchInstructions:
                description: >-
                  FinancialAccountsProvider is optional and use only if default
                  provider need to be overridden
                summary: PlainAchInstructions
                value:
                  accountName: Personal Loan Account
                  accountNumber: 06090362
                  accountType: checking
                  financialAccountsProvider: plainAchInstructions
                  identityId: 3451ce64-6d9e-47e1-a903-46e55ba61969
                  routingNumber: '124302150'
            schema:
              $ref: '#/components/schemas/ExternalAccountCreateModel'
          application/json:
            examples:
              Mx:
                description: >-
                  FinancialAccountsProvider is optional and use only if default
                  provider need to be overridden
                summary: Mx
                value:
                  financialAccountId: <mx-accountId>
                  financialAccountsProvider: mx
                  identityId: 715820ed-2427-40fd-96d1-6aec7c56a068
              Plaid:
                description: >-
                  FinancialAccountsProvider is optional and use only if default
                  provider need to be overridden
                summary: Plaid
                value:
                  financialAccountId: <plaid-accountId>
                  financialAccountsProvider: plaid
                  identityId: 67ab893e-9076-45ba-8796-2b7a1d90f62d
                  itemId: <plaid-item-id>
              PlaidProcessorToken:
                description: >-
                  FinancialAccountsProvider is optional and use only if default
                  provider need to be overridden
                summary: PlaidProcessorToken
                value:
                  financialAccountsProvider: plaidProcessorToken
                  identityId: 903640b0-8892-49c9-8250-3e0f14775dc7
                  processorToken: <plaid-processor-token>
              PlainAchInstructions:
                description: >-
                  FinancialAccountsProvider is optional and use only if default
                  provider need to be overridden
                summary: PlainAchInstructions
                value:
                  accountName: Personal Loan Account
                  accountNumber: 06090362
                  accountType: checking
                  financialAccountsProvider: plainAchInstructions
                  identityId: 3451ce64-6d9e-47e1-a903-46e55ba61969
                  routingNumber: '124302150'
            schema:
              $ref: '#/components/schemas/ExternalAccountCreateModel'
          text/json:
            examples:
              Mx:
                description: >-
                  FinancialAccountsProvider is optional and use only if default
                  provider need to be overridden
                summary: Mx
                value:
                  financialAccountId: <mx-accountId>
                  financialAccountsProvider: mx
                  identityId: 715820ed-2427-40fd-96d1-6aec7c56a068
              Plaid:
                description: >-
                  FinancialAccountsProvider is optional and use only if default
                  provider need to be overridden
                summary: Plaid
                value:
                  financialAccountId: <plaid-accountId>
                  financialAccountsProvider: plaid
                  identityId: 67ab893e-9076-45ba-8796-2b7a1d90f62d
                  itemId: <plaid-item-id>
              PlaidProcessorToken:
                description: >-
                  FinancialAccountsProvider is optional and use only if default
                  provider need to be overridden
                summary: PlaidProcessorToken
                value:
                  financialAccountsProvider: plaidProcessorToken
                  identityId: 903640b0-8892-49c9-8250-3e0f14775dc7
                  processorToken: <plaid-processor-token>
              PlainAchInstructions:
                description: >-
                  FinancialAccountsProvider is optional and use only if default
                  provider need to be overridden
                summary: PlainAchInstructions
                value:
                  accountName: Personal Loan Account
                  accountNumber: 06090362
                  accountType: checking
                  financialAccountsProvider: plainAchInstructions
                  identityId: 3451ce64-6d9e-47e1-a903-46e55ba61969
                  routingNumber: '124302150'
            schema:
              $ref: '#/components/schemas/ExternalAccountCreateModel'
        description: Request model
      summary: >-
        Create a funds transfer method and the respective external account.
        (Auth)
  '/api/trust/v1/external-accounts/financial/widget-url/{identityId}':
    get:
      parameters:
        - description: The identity identifier.
          in: path
          name: identityId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - in: query
          name: WidgetIntegrationType
          schema:
            $ref: '#/components/schemas/WidgetIntegrationType'
          style: form
        - in: query
          name: MessageWebViewUrlScheme
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WidgetModel'
          description: Widget response models.
        '401':
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Identity id does not belong to current organization.
      security:
        - Bearer: []
      tags:
        - ExternalAccounts
      summary: Retrieve the widget Url for particular identity. (Auth)
  /api/trust/v1/external-accounts/international-wire:
    post:
      parameters:
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalAccountResponseModel'
          description: International wire transfer was successfully created.
        '401':
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Identity id does not belong to current organization.
      security:
        - Bearer: []
      tags:
        - ExternalAccounts
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/InternationalWireCreateModel'
          application/json:
            schema:
              $ref: '#/components/schemas/InternationalWireCreateModel'
          text/json:
            schema:
              $ref: '#/components/schemas/InternationalWireCreateModel'
        description: Request model
      summary: Create a new international wire (Auth)
  /api/trust/v1/external-accounts/wire:
    post:
      parameters:
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalAccountResponseModel'
          description: External account was successfully created.
        '401':
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Identity id does not belong to current organization.
      security:
        - Bearer: []
      tags:
        - ExternalAccounts
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/ExternalWireAccountCreateModel'
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalWireAccountCreateModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ExternalWireAccountCreateModel'
        description: Request model
      summary: Create the external wire account. (Auth)
  '/api/trust/v1/external-accounts/{externalAccountId}':
    get:
      parameters:
        - description: External account id
          in: path
          name: externalAccountId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalAccountResponseModel'
          description: Success
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      security:
        - Bearer: []
      tags:
        - ExternalAccounts
      summary: Retrieve specific external account by id. (Auth)
  /api/trust/v1/payments:
    get:
      parameters:
        - in: query
          name: IdentityId
          schema:
            format: uuid
            type: string
          style: form
        - description: Page count
          in: query
          name: Page
          schema:
            format: int32
            type: integer
          style: form
        - description: PageSize
          in: query
          name: PageSize
          schema:
            format: int32
            type: integer
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponseModelPageResponseModel'
          description: Response with payments page.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: []
      tags:
        - Payments
      summary: 'Retrieve the filtered, paged list with payments. (Auth)'
    post:
      parameters:
        - description: Session key
          in: header
          name: Session-Key
          schema:
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponseModel'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: []
      tags:
        - Payments
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreatePaymentRequestModel'
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentRequestModel'
        description: The model.
      summary: Create the payment. (Auth)
  '/api/trust/v1/payments/{paymentId}':
    get:
      parameters:
        - description: Payment identifier
          in: path
          name: paymentId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponseModel'
          description: Success
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      security:
        - Bearer: []
      tags:
        - Payments
      summary: Retrieve the payment by id. (Auth)
  '/api/trust/v1/payments/{paymentId}/approve':
    post:
      parameters:
        - description: Payment identifier
          in: path
          name: paymentId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: []
      tags:
        - Payments
      summary: Approve payment. Allowed only for Integration dashboard users. (Auth)
  '/api/trust/v1/payments/{paymentId}/cancel':
    put:
      parameters:
        - description: Payment identifier
          in: path
          name: paymentId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponseModel'
          description: Success
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      security:
        - Bearer: []
      tags:
        - Payments
      summary: 'Cancel payment, right now ACH payments cancelling supported only (Auth)'
  '/api/trust/v1/payments/{paymentId}/reject':
    post:
      parameters:
        - description: Payment identifier
          in: path
          name: paymentId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: []
      tags:
        - Payments
      summary: Reject payment. Allowed only for Integration dashboard users. (Auth)
  /api/trust/v1/sub-accounts/payments:
    post:
      parameters:
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponseModel'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: []
      tags:
        - Payments
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateSubAccountPaymentRequestModel'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubAccountPaymentRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateSubAccountPaymentRequestModel'
        description: Request model.
      summary: Create a payment for sub accounts. (Auth)
  '/api/trust/v1/sub-accounts/sandbox/{subAccountId}/start-incoming-wire':
    post:
      parameters:
        - description: The id of the sub account where to start simulation.
          in: path
          name: subAccountId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '202':
          description: Wire simulation was successfully created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request model data
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Sub account was not found
      security:
        - Bearer: []
      tags:
        - SubAccounts
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/SandboxIncomingWireModel'
          application/json:
            schema:
              $ref: '#/components/schemas/SandboxIncomingWireModel'
          text/json:
            schema:
              $ref: '#/components/schemas/SandboxIncomingWireModel'
        description: The model
      summary: Create an incoming wire simulation on sandbox environments. (Auth)
  /api/trust/v1/transactions:
    get:
      parameters:
        - in: query
          name: IdentityId
          schema:
            format: uuid
            type: string
          style: form
        - in: query
          name: CustodialAccountId
          schema:
            format: uuid
            type: string
          style: form
        - in: query
          name: PaymentId
          schema:
            format: uuid
            type: string
          style: form
        - description: Page count
          in: query
          name: Page
          schema:
            format: int32
            type: integer
          style: form
        - description: PageSize
          in: query
          name: PageSize
          schema:
            format: int32
            type: integer
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponseModelPageResponseModel'
          description: Success
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: 'Retrieve the filtered, paged list with transactions. (Auth)'
  '/api/trust/v1/transactions/{transactionId}':
    get:
      parameters:
        - description: Transaction identifier
          in: path
          name: transactionId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponseModel'
          description: Success
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Retrieve the transaction by id. (Auth)
  /api/trust/v1/transfers:
    post:
      parameters:
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponseModel'
          description: Transfer started successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request model data
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Source/destination account was not found
      security:
        - Bearer: []
      tags:
        - Transfers
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/TransferRequestModel'
          application/json:
            schema:
              $ref: '#/components/schemas/TransferRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/TransferRequestModel'
        description: Transfer request model
      summary: Execute transfer. (Auth)
  '/api/v1/private-cross-service/auth/default-auth-identifier/{orgId}':
    get:
      parameters:
        - description: Organization id
          in: path
          name: orgId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationAuthIdentifierResponseModel'
          description: Organization auth identifier response model
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Auth identifier not found
      tags:
        - Auth
      summary: Retrieves auth identifier by organization id
  '/api/v1/private-cross-service/auth/enabled-endpoints-permissions-for-api-user/{authId}':
    get:
      parameters:
        - description: The auth id of the api user to check endpoint permissions for
          in: path
          name: authId
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnabledEndpointPermissionsResponse'
          description: User api enabled endpoints permissions
      tags:
        - Auth
      summary: Retrieve enabled endpoints permissions for api user
  /api/v1/private-cross-service/auth/endpoints-permissions-tree:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointPermissionTreeNodeResponse'
          description: Endpoints permissions tree
      tags:
        - Auth
      summary: Retrieve full tree of endpoints permissions
  /api/v1/private-cross-service/auth/global-enabled-endpoints-permissions:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnabledEndpointPermissionsResponse'
          description: global enabled endpoints permissions
      tags:
        - Auth
      summary: Retrieve global enabled endpoints permissions
  /api/v1/private-cross-service/custodial-accounts:
    get:
      parameters:
        - in: query
          name: IdentityId
          schema:
            format: uuid
            type: string
          style: form
        - description: Page count
          in: query
          name: Page
          schema:
            format: int32
            type: integer
          style: form
        - description: PageSize
          in: query
          name: PageSize
          schema:
            format: int32
            type: integer
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustodialAccountsResponseModelPageResponseModel
          description: Custodial accounts page response model
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: []
      tags:
        - CustodialAccounts
      summary: Retrieve custodial accounts by identity identifier. (Auth)
    post:
      parameters:
        - description: Organization identifier.
          in: query
          name: organizationId
          required: true
          schema:
            format: uuid
            type: string
          style: form
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustodialAccountsResponseModel'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Conflict
      tags:
        - CustodialAccounts
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateCustodialAccountRequestModel'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustodialAccountRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateCustodialAccountRequestModel'
        description: Create custodial account request model.
      summary: Create the new custodial account.
  '/api/v1/private-cross-service/custodial-accounts/{custodialAccountId}':
    get:
      parameters:
        - description: Custodial account identifier
          in: path
          name: custodialAccountId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: Boolean indicating whether or not to include balances
          in: query
          name: includeBalances
          schema:
            type: boolean
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustodialAccountsResponsePrivateModel'
          description: Response with the custodial account.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Custodial account not found.
      tags:
        - CustodialAccounts
      summary: Retrieve the custodial account by its id.
    patch:
      parameters:
        - description: Custodial account identifier
          in: path
          name: custodialAccountId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No Content
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      tags:
        - CustodialAccounts
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateAccountStatusRequestPrivateModel'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccountStatusRequestPrivateModel'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateAccountStatusRequestPrivateModel'
        description: Update account status request model
      summary: Update account status
  '/api/v1/private-cross-service/custodial-accounts/{custodialAccountId}/crypto-deposit-instructions/{network}/{assetFiatType}':
    get:
      parameters:
        - description: Custodial account identifier
          in: path
          name: custodialAccountId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: Blockchain network
          in: path
          name: network
          required: true
          schema:
            $ref: '#/components/schemas/ModelNetworkChain'
          style: simple
        - description: Asset fiat type
          in: path
          name: assetFiatType
          required: true
          schema:
            $ref: '#/components/schemas/ModelAssetFiatType'
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CryptoInstructionsResponseModel'
          description: Success
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      tags:
        - CustodialAccounts
      summary: Retrieve the crypto deposit instructions.
  '/api/v1/private-cross-service/custodial-accounts/{custodialAccountId}/fiat-deposit-instructions/{assetFiatType}':
    get:
      parameters:
        - description: Custodial account identifier
          in: path
          name: custodialAccountId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: Asset fiat type
          in: path
          name: assetFiatType
          required: true
          schema:
            $ref: '#/components/schemas/ModelAssetFiatType'
          style: simple
        - description: Organization's id
          in: query
          name: organizationId
          required: true
          schema:
            format: uuid
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstructionsResponseModel'
          description: Success
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      tags:
        - CustodialAccounts
      summary: Retrieve the fiat deposit instructions.
  '/api/v1/private-cross-service/custodial-accounts/{custodialAccountId}/rename-with-label':
    patch:
      parameters:
        - description: Custodial account identifier.
          in: path
          name: custodialAccountId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No Content
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      tags:
        - CustodialAccounts
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: >-
                #/components/schemas/UpdateCustodialAccountNameWithLabelRequestModel
          application/json:
            schema:
              $ref: >-
                #/components/schemas/UpdateCustodialAccountNameWithLabelRequestModel
          text/json:
            schema:
              $ref: >-
                #/components/schemas/UpdateCustodialAccountNameWithLabelRequestModel
        description: Update custodial account name request model.
      summary: Update account name and label.
  /api/v1/private-cross-service/external-accounts:
    get:
      parameters:
        - in: query
          name: IdentityId
          schema:
            format: uuid
            type: string
          style: form
        - description: Page count
          in: query
          name: Page
          schema:
            format: int32
            type: integer
          style: form
        - description: PageSize
          in: query
          name: PageSize
          schema:
            format: int32
            type: integer
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ExternalAccountResponseModelPageResponseModel
          description: External account response page model.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: []
      tags:
        - ExternalAccounts
      summary: Retrieve external accounts by identity identifier. (Auth)
  /api/v1/private-cross-service/external-accounts/international-wire:
    post:
      parameters:
        - description: Organization identifier.
          in: query
          name: organizationId
          required: true
          schema:
            format: uuid
            type: string
          style: form
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalAccountResponseModel'
          description: International wire transfer was successfully created.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Organization id is required.
      tags:
        - ExternalAccounts
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/InternationalWireCreateModel'
          application/json:
            schema:
              $ref: '#/components/schemas/InternationalWireCreateModel'
          text/json:
            schema:
              $ref: '#/components/schemas/InternationalWireCreateModel'
        description: Request model
      summary: Create a new international wire
  /api/v1/private-cross-service/external-accounts/wire:
    post:
      parameters:
        - description: Organization identifier.
          in: query
          name: organizationId
          required: true
          schema:
            format: uuid
            type: string
          style: form
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalAccountResponseModel'
          description: External account was successfully created.
      tags:
        - ExternalAccounts
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/ExternalWireAccountCreateModel'
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalWireAccountCreateModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ExternalWireAccountCreateModel'
        description: Request model.
      summary: Create the external wire account.
  '/api/v1/private-cross-service/organizations/{orgId}/crypto-price-markup-configuration/{tradingPair}':
    get:
      parameters:
        - description: Organization id
          in: path
          name: orgId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: Trading pair
          in: path
          name: tradingPair
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonMarkupModel'
          description: Success
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      security:
        - Bearer: []
      tags:
        - Organizations
      summary: Get crypto price markup configuration (Auth)
  '/api/v1/private-cross-service/organizations/{organizationId}/custody-provider-configuration':
    get:
      parameters:
        - description: Organization id
          in: path
          name: organizationId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: Asset type
          in: query
          name: assetType
          schema:
            $ref: '#/components/schemas/ModelAssetType'
          style: form
        - description: Asset
          in: query
          name: asset
          schema:
            $ref: '#/components/schemas/ModelAssetFiatType'
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustodyProviderConfigurationResponseModel'
          description: Custody provider configuration response model
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
      tags:
        - Organizations
      summary: Retrieve custody provider configuration.
  '/api/v1/private-cross-service/organizations/{organizationId}/permissions':
    get:
      parameters:
        - description: Organization identifier.
          in: path
          name: organizationId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgPermissionsResponseModel'
          description: Organization permissions response model.
      tags:
        - Organizations
      summary: Retrieve the organization.
  /api/v1/private-cross-service/payments:
    post:
      parameters:
        - description: >-
            Current organization id, required because we need to populate the
            security context.
          in: query
          name: organizationId
          required: true
          schema:
            format: uuid
            type: string
          style: form
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradeResponseModel'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      tags:
        - Payments
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/TradeRequestModel'
          application/json:
            schema:
              $ref: '#/components/schemas/TradeRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/TradeRequestModel'
        description: Create payment request model.
      summary: Create the payment.
  '/api/v1/private-cross-service/payments/{paymentId}':
    get:
      parameters:
        - description: Payment identifier
          in: path
          name: paymentId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponseModel'
          description: Success
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      tags:
        - Payments
      summary: Retrieve the payment by id.
  '/api/v1/private-cross-service/payments/{paymentId}/approve':
    post:
      parameters:
        - description: Payment identifier
          in: path
          name: paymentId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: Organization identifier
          in: query
          name: organizationId
          required: true
          schema:
            format: uuid
            type: string
          style: form
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No Content
      tags:
        - Payments
      summary: Approve payment. Allowed only for Integration dashboard users.
  '/api/v1/private-cross-service/payments/{paymentId}/reject':
    post:
      parameters:
        - description: Payment identifier
          in: path
          name: paymentId
          required: true
          schema:
            format: uuid
            type: string
          style: simple
        - description: Organization identifier
          in: query
          name: organizationId
          required: true
          schema:
            format: uuid
            type: string
          style: form
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '204':
          description: No Content
      tags:
        - Payments
      summary: Reject payment. Allowed only for Integration dashboard users.
  /api/v1/private-cross-service/transfers:
    post:
      parameters:
        - description: >-
            Current organization id, required because we need to populate the
            security context.
          in: query
          name: organizationId
          required: true
          schema:
            format: uuid
            type: string
          style: form
        - description: The idempotency key for the endpoint
          in: header
          name: Idempotency-Key
          schema:
            format: uuid
            type: string
          style: simple
      responses:
        '200':
          description: Success
      tags:
        - Transfers
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/TransferRequestModel'
          application/json:
            schema:
              $ref: '#/components/schemas/TransferRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/TransferRequestModel'
        description: Transfer request model.
      summary: "Creates the transfer. The same signature and logic as in POST api/trust/v1/transfers.\r\nThis private endpoint is used by the Elements API to create transfers."
components:
  schemas:
    AccountBeneficiaryRequestModel:
      additionalProperties: false
      description: Account beneficiary request model
      properties:
        identityId:
          description: Identity Id
          format: uuid
          minLength: 1
          type: string
        percentageOfDivision:
          description: Percentage of division
          format: double
          type: number
        relationship:
          description: Relationship
          nullable: true
          type: string
      required:
        - identityId
        - percentageOfDivision
      type: object
    AccountConfigResponseModel:
      additionalProperties: false
      description: Clearing accounts config request model
      properties:
        custodialAccountId:
          description: Custodial account identifier
          format: uuid
          nullable: true
          type: string
        provider:
          $ref: '#/components/schemas/CustodialAccountsProvider'
        source:
          $ref: '#/components/schemas/ConfigSource'
      type: object
    AccountIdentifierCode:
      additionalProperties: false
      properties:
        account:
          nullable: true
          type: string
        identifierCode:
          nullable: true
          type: string
      type: object
    AccountNameAddress:
      additionalProperties: false
      properties:
        account:
          nullable: true
          type: string
        nameAddress:
          nullable: true
          type: string
      type: object
    AccountNumberNameAddress:
      additionalProperties: false
      properties:
        account:
          nullable: true
          type: string
        nameAddress:
          nullable: true
          type: string
        number:
          nullable: true
          type: string
      type: object
    AccountType:
      description: Account type
      enum:
        - checking
        - savings
      type: string
    AchInstructionsModel:
      additionalProperties: false
      description: ACH instructions response model
      properties:
        accountNumber:
          description: Represents account number.
          nullable: true
          type: string
        receiverAddress:
          $ref: '#/components/schemas/AddressModel'
        receiverBankAddress:
          $ref: '#/components/schemas/AddressModel'
        receiverBankName:
          description: Represents receiver bank name.
          nullable: true
          type: string
        receiverName:
          description: Represents receiver name.
          nullable: true
          type: string
        refCode:
          description: Reference code
          nullable: true
          type: string
        routingNumber:
          description: Represents routing number.
          nullable: true
          type: string
      type: object
    AddressModel:
      additionalProperties: false
      description: Address model
      properties:
        city:
          description: Represents the city.
          minLength: 1
          type: string
        country:
          description: Gets or sets the country.
          minLength: 1
          type: string
        postalCode:
          description: Represents the postal code or US ZIP code.
          nullable: true
          type: string
        state:
          description: Represents the region or US State.
          nullable: true
          type: string
        street1:
          description: Represents the street address.
          minLength: 1
          type: string
        street2:
          description: Represents the additional street address.
          nullable: true
          type: string
      required:
        - city
        - country
        - street1
      type: object
    AddressRequestModel:
      additionalProperties: false
      properties:
        city:
          nullable: true
          type: string
        country:
          nullable: true
          type: string
        postalCode:
          nullable: true
          type: string
        state:
          nullable: true
          type: string
        street1:
          nullable: true
          type: string
        street2:
          nullable: true
          type: string
      type: object
    AllowedSubApi:
      enum:
        - none
        - smartContract
        - trust
        - wallet
        - compliance
      type: string
    ApiRoleResponseModel:
      additionalProperties: false
      description: Api roles response model
      properties:
        id:
          description: Role Id
          format: uuid
          type: string
        name:
          description: Role name
          nullable: true
          type: string
      type: object
    AssetAmountModel:
      additionalProperties: false
      description: Asset amount model
      properties:
        amount:
          description: Amount
          format: double
          type: number
        asset:
          $ref: '#/components/schemas/ModelAssetFiatType'
      type: object
    AssetData:
      additionalProperties: false
      description: Asset data
      properties:
        asset:
          $ref: '#/components/schemas/ModelAssetFiatType'
        network:
          $ref: '#/components/schemas/ModelNetworkChain'
      type: object
    AssetDataFrom:
      additionalProperties: false
      description: Asset data from
      properties:
        asset:
          $ref: '#/components/schemas/ModelAssetFiatType'
        disbursableAmount:
          description: Disbursable amount
          nullable: true
          type: string
        network:
          $ref: '#/components/schemas/ModelNetworkChain'
        omnibusDisbursableAmount:
          description: Omnibus disbursable amount
          format: double
          nullable: true
          type: number
        pendingTradableAmount:
          description: Pending tradable amount
          nullable: true
          type: string
      type: object
    AssetFiatType:
      enum:
        - usd
        - btc
        - eth
        - matic
        - usdc
        - sol
        - ada
        - xlm
        - dot
        - link
        - algo
        - bnb
        - busd
        - avax
        - ltc
        - uni
        - crv
        - aave
        - eos
        - bch
        - xtz
        - comp
        - bat
        - shib
        - doge
        - grt
        - sushi
        - sand
        - enj
        - axs
        - mana
        - mkr
        - yfi
        - atom
        - ape
        - dai
        - usdt
        - near
        - trx
        - ftm
        - xrp
        - flrns
        - flow
        - smtf
        - qnt
        - chz
        - gala
        - hbar
        - gold
        - silver
      type: string
    AssetFiatTypeConfigurationModel:
      additionalProperties: false
      properties:
        provider:
          $ref: '#/components/schemas/IntegrationServiceProvider'
      type: object
    AssetsToAllowNegativeBalancesForOmnibusResponse:
      additionalProperties: false
      properties:
        assets:
          items:
            $ref: '#/components/schemas/ModelAssetFiatType'
          nullable: true
          type: array
      type: object
    BankDataModel:
      additionalProperties: false
      description: Bank details
      properties:
        accountNumber:
          description: Account number
          nullable: true
          type: string
        accountType:
          description: Account type
          nullable: true
          type: string
        bankName:
          description: Bank name
          nullable: true
          type: string
        routingNumber:
          description: Routing number
          nullable: true
          type: string
      type: object
    BankDataRequestModel:
      additionalProperties: false
      properties:
        accountNumber:
          nullable: true
          type: string
        accountType:
          nullable: true
          type: string
        bankName:
          nullable: true
          type: string
        routingNumber:
          nullable: true
          type: string
      type: object
    BeneficiaryCustomer:
      additionalProperties: false
      properties:
        account_identifierCode:
          $ref: '#/components/schemas/AccountIdentifierCode'
        account_number_nameAddress:
          $ref: '#/components/schemas/AccountNumberNameAddress'
      type: object
    BeneficiaryRequestModel:
      additionalProperties: false
      description: Beneficiary request model
      properties:
        email:
          description: Email
          minLength: 1
          type: string
        firstName:
          description: First name
          minLength: 1
          type: string
        lastName:
          description: Last name
          minLength: 1
          type: string
        percentageOfDivision:
          description: Percentage of division
          exclusiveMinimum: true
          format: double
          maximum: 100
          minimum: 0
          type: number
        phone:
          description: Phone
          maxLength: 20
          minLength: 1
          type: string
        relationship:
          description: Relationship
          nullable: true
          type: string
        ssn:
          description: Social security number
          nullable: true
          type: string
      required:
        - email
        - firstName
        - lastName
        - percentageOfDivision
        - phone
      type: object
    BeneficiaryResponseModel:
      additionalProperties: false
      description: Beneficiary response model
      properties:
        beneficiaryId:
          description: Beneficiary identifier
          format: uuid
          type: string
        email:
          description: Email
          nullable: true
          type: string
        identityId:
          description: Identity Id
          format: uuid
          type: string
        percentageOfDivision:
          description: Percentage of division
          format: double
          type: number
        phone:
          description: Phone
          nullable: true
          type: string
        relationship:
          description: Relationship
          nullable: true
          type: string
        ssn:
          description: Social security number
          nullable: true
          type: string
      type: object
    BeneficiaryResponseModelCollectionResponseModel:
      additionalProperties: false
      description: Collection response model
      properties:
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/BeneficiaryResponseModel'
          nullable: true
          type: array
      type: object
    CacheType:
      enum:
        - endpointsPermissionsTree
        - endpointsPermissionsGlobalConfig
        - endpointsPermissionsOfUserByIdentifier
      type: string
    CardProcessingProvider:
      description: "Card processing provider, maps to Fortress.Core.Domain.Models.Entities.FundsStorages.ExternalAccounts.ExternalAccountProviderSpecific.\r\nIs part of Fortress.Core.Domain.Models.Entities.IntegrationServiceProvider."
      enum:
        - checkout
        - nmi
      type: string
    CardVerificationStatus:
      enum:
        - none
        - verified
      type: string
    ClearingAccountsConfigRequestModel:
      additionalProperties: false
      description: Clearing accounts config request model
      properties:
        custodialAccountId:
          description: Custodial account identifier
          format: uuid
          minLength: 1
          type: string
        provider:
          $ref: '#/components/schemas/CustodialAccountsProvider'
      required:
        - custodialAccountId
        - provider
      type: object
    ClearingAccountsConfigResponseModel:
      additionalProperties: false
      description: Clearing accounts config request model
      properties:
        achDeposit:
          $ref: '#/components/schemas/AccountConfigResponseModel'
        achWithdrawal:
          $ref: '#/components/schemas/AccountConfigResponseModel'
        wireDeposit:
          $ref: '#/components/schemas/AccountConfigResponseModel'
        wireWithdrawal:
          $ref: '#/components/schemas/AccountConfigResponseModel'
      type: object
    CommonMarkupModel:
      additionalProperties: false
      description: Common markup model
      properties:
        buyBasisPoints:
          description: Buy basis points
          format: double
          minimum: 0
          type: number
        sellBasisPoints:
          description: Sell basis points
          format: double
          minimum: 0
          type: number
      type: object
    ConfigSource:
      description: Payment type
      enum:
        - orgConfig
        - globalConfig
      type: string
    CreateCustodialAccountRequestModel:
      additionalProperties: false
      description: Create custodial account request model
      properties:
        beneficiaries:
          description: Beneficiaries
          items:
            $ref: '#/components/schemas/BeneficiaryRequestModel'
          nullable: true
          type: array
        businessIdentityId:
          description: Business identity id
          format: uuid
          nullable: true
          type: string
        label:
          $ref: '#/components/schemas/CustodialAccountLabel'
        name:
          description: Name of custodial account
          maxLength: 50
          nullable: true
          type: string
        personalIdentityId:
          description: Personal identity id
          format: uuid
          nullable: true
          type: string
        type:
          $ref: '#/components/schemas/CustodialAccountTypeModel'
      required:
        - type
      type: object
    CreateCustomAssetRequestModel:
      additionalProperties: false
      properties:
        amount:
          format: double
          minimum: 0
          nullable: true
          type: number
        assetType:
          $ref: '#/components/schemas/CustomAssetType'
        currency:
          $ref: '#/components/schemas/ModelAssetFiatType'
        description:
          nullable: true
          type: string
        name:
          minLength: 1
          type: string
        symbol:
          nullable: true
          type: string
      required:
        - assetType
        - name
      type: object
    CreateHelperCustodialAccountRequestModel:
      additionalProperties: false
      description: Create custodial account request model
      properties:
        businessIdentityId:
          description: Business identity id
          format: uuid
          nullable: true
          type: string
        label:
          $ref: '#/components/schemas/CustodialAccountLabel'
        name:
          description: Name of custodial account
          nullable: true
          type: string
        personalIdentityId:
          description: Personal identity id
          format: uuid
          nullable: true
          type: string
        type:
          $ref: '#/components/schemas/CustodialAccountTypeModel'
      type: object
    CreateInactiveAccountInternalMovementRequestModel:
      additionalProperties: false
      properties:
        amount:
          format: double
          maximum: 100000000
          minimum: 0.01
          type: number
        custodialAccountId:
          format: uuid
          minLength: 1
          type: string
      required:
        - custodialAccountId
      type: object
    CreatePaymentRequestModel:
      additionalProperties: false
      description: Create payment request model
      properties:
        comment:
          description: Gets or sets the comment.
          maxLength: 1000
          nullable: true
          type: string
        destination:
          $ref: '#/components/schemas/FundsStorageModel'
        funds:
          description: Gets or sets the funds.
          format: double
          maximum: 100000000
          minimum: 0.01
          type: number
        memo:
          description: Gets or sets the memo.
          maxLength: 140
          nullable: true
          type: string
        purposeOfPayment:
          description: Gets or sets the purpose of payment.
          maxLength: 140
          minLength: 5
          type: string
        source:
          $ref: '#/components/schemas/FundsStorageModel'
        useIsa:
          description: Gets or sets the use ISA flag.
          nullable: true
          type: boolean
      required:
        - destination
        - purposeOfPayment
        - source
      type: object
    CreatePreciousMetalsTransferRequestModel:
      additionalProperties: false
      properties:
        accountId:
          description: Destination castodial account id.
          format: uuid
          minLength: 1
          type: string
        amount:
          description: Setting the amount to transfer.
          exclusiveMinimum: true
          format: double
          minimum: 0
          type: number
        asset:
          $ref: '#/components/schemas/ModelAssetFiatType'
        comment:
          description: Comments.
          nullable: true
          type: string
        transferType:
          $ref: '#/components/schemas/TransferType'
      required:
        - accountId
        - amount
        - asset
      type: object
    CreateRefundPaymentForBuyCryptoModel:
      additionalProperties: false
      properties:
        amountToRefund:
          format: double
          type: number
        custodialAccountId:
          format: uuid
          type: string
        existingPaymentId:
          format: uuid
          type: string
      type: object
    CreateRefundPaymentForCryptoSellRequest:
      additionalProperties: false
      properties:
        amountToRefund:
          format: double
          type: number
        asset:
          $ref: '#/components/schemas/AssetFiatType'
        custodialAccountId:
          format: uuid
          type: string
        network:
          $ref: '#/components/schemas/NetworkChain'
        paymentId:
          format: uuid
          type: string
      type: object
    CreateRefundPaymentFromCaToTradingRequest:
      additionalProperties: false
      properties:
        amountToRefund:
          format: double
          type: number
        asset:
          $ref: '#/components/schemas/AssetFiatType'
        custodialAccountId:
          format: uuid
          type: string
        network:
          $ref: '#/components/schemas/NetworkChain'
      type: object
    CreateRefundPaymentFromCustodialAccountToLiquidityRequest:
      additionalProperties: false
      properties:
        amountToRefund:
          format: double
          type: number
        asset:
          $ref: '#/components/schemas/AssetFiatType'
        custodialAccountId:
          format: uuid
          type: string
        network:
          $ref: '#/components/schemas/NetworkChain'
      type: object
    CreateRefundPaymentFromTradingToZpRequest:
      additionalProperties: false
      properties:
        amountToRefund:
          format: double
          type: number
        asset:
          $ref: '#/components/schemas/AssetFiatType'
        network:
          $ref: '#/components/schemas/NetworkChain'
      type: object
    CreateSubAccountPaymentRequestModel:
      additionalProperties: false
      description: Create sub account payment request model
      properties:
        comment:
          description: Gets or sets the comment.
          nullable: true
          type: string
        destination:
          $ref: '#/components/schemas/SubAccountFundsStorageModel'
        funds:
          description: Gets or sets the funds.
          format: double
          type: number
        source:
          $ref: '#/components/schemas/SubAccountFundsStorageModel'
      type: object
    CryptoInstructionsResponseModel:
      additionalProperties: false
      description: Crypto deposit instructions response model
      properties:
        address:
          description: Fireblocks crypto address
          nullable: true
          type: string
      type: object
    CryptoLiquidityProvider:
      enum:
        - coinRoutes
        - zebPay
        - talos
      type: string
    CurrencyInstructedAmount:
      additionalProperties: false
      properties:
        amount:
          nullable: true
          type: string
        currency:
          nullable: true
          type: string
      type: object
    CustodialAccountAgreementResponseModel:
      additionalProperties: false
      description: Custodial account agreement response model
      properties:
        url:
          description: Agreement url
          nullable: true
          type: string
      type: object
    CustodialAccountBalancesResponseModel:
      additionalProperties: false
      description: Custodial account balances response model
      properties:
        assetFiatType:
          $ref: '#/components/schemas/ModelAssetFiatType'
        assetType:
          $ref: '#/components/schemas/ModelAssetType'
        assetTypeId:
          description: AssetType id
          nullable: true
          type: string
        disbursable:
          description: Disbursable balance
          format: double
          type: number
        locked:
          description: Locked balance
          format: double
          type: number
        network:
          $ref: '#/components/schemas/ModelNetworkChain'
        pending:
          description: Pending balance
          format: double
          type: number
        subAccounts:
          description: Sub balances
          items:
            $ref: '#/components/schemas/SubAccountBalanceResponseModel'
          nullable: true
          type: array
        subBalances:
          $ref: '#/components/schemas/SubBalancesResponseModel'
        total:
          description: Total balance
          format: double
          type: number
      type: object
    CustodialAccountBalancesResponseModelCollectionResponseModel:
      additionalProperties: false
      description: Collection response model
      properties:
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/CustodialAccountBalancesResponseModel'
          nullable: true
          type: array
      type: object
    CustodialAccountLabel:
      description: Custodial account label
      enum:
        - user
        - corporate
      type: string
    CustodialAccountStatus:
      description: Custodial account statuses
      enum:
        - open
        - closed
        - suspended
      type: string
    CustodialAccountSuspensionModel:
      additionalProperties: false
      properties:
        decisionActor:
          nullable: true
          type: string
        decisionReason:
          nullable: true
          type: string
      type: object
    CustodialAccountTypeModel:
      enum:
        - personal
        - business
        - rothIra
        - traditionalIra
        - sepIra
        - simpleIra
      type: string
    CustodialAccountsProvider:
      description: "Custodial accounts provider, defines type of Fortress.Core.Domain.Models.Entities.FundsStorages.CustodialAccounts.CustodialAccountProviderSpecific.\r\nIs part of Fortress.Core.Domain.Models.Entities.IntegrationServiceProvider."
      enum:
        - treasuryPrime
        - cos
        - nonApiBank
        - treasuryPrimeWithBankCogent
      type: string
    CustodialAccountsResponseModel:
      additionalProperties: false
      description: Custodial accounts response model
      properties:
        accountNumber:
          description: Custodial account number
          nullable: true
          type: string
        accountStatus:
          $ref: '#/components/schemas/CustodialAccountStatus'
        accountType:
          $ref: '#/components/schemas/CustodialAccountTypeModel'
        beneficiaries:
          description: Beneficiaries
          items:
            $ref: '#/components/schemas/BeneficiaryResponseModel'
          nullable: true
          type: array
        id:
          description: Custodial account identifier
          format: uuid
          type: string
        label:
          $ref: '#/components/schemas/CustodialAccountLabel'
        name:
          description: Name of custodial account
          nullable: true
          type: string
        ownerIdentityId:
          description: Owner identity identifier
          format: uuid
          type: string
        refCode:
          description: Reference code on CustodialAccount
          nullable: true
          type: string
        subAccounts:
          description: Sub-accounts
          items:
            $ref: '#/components/schemas/SubAccountResponseModel'
          nullable: true
          type: array
      type: object
    CustodialAccountsResponseModelPageResponseModel:
      additionalProperties: false
      properties:
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/CustodialAccountsResponseModel'
          nullable: true
          type: array
        meta:
          $ref: '#/components/schemas/PageMetadata'
      type: object
    CustodialAccountsResponsePrivateModel:
      additionalProperties: false
      properties:
        accountNumber:
          description: Custodial account number
          nullable: true
          type: string
        accountStatus:
          $ref: '#/components/schemas/CustodialAccountStatus'
        accountType:
          $ref: '#/components/schemas/CustodialAccountTypeModel'
        balances:
          description: Custodial account balances
          items:
            $ref: '#/components/schemas/CustodialAccountBalancesResponseModel'
          nullable: true
          type: array
        createdAtUtc:
          description: Custodial account creation date and time.
          format: date-time
          type: string
        id:
          description: Custodial account identifier
          format: uuid
          type: string
        name:
          description: Name of custodial account
          nullable: true
          type: string
        organizationId:
          description: Organization id of this account.
          format: uuid
          type: string
        ownerIdentityId:
          description: Owner identity identifier
          format: uuid
          type: string
      type: object
    CustodyModel:
      description: Custody model
      enum:
        - segregated
        - omnibus
        - pseudoOmnibus
      type: string
    CustodyProviderConfigurationModel:
      additionalProperties: false
      description: Custody provider configuration model
      properties:
        assetFiatTypesConfigurations:
          additionalProperties:
            $ref: '#/components/schemas/AssetFiatTypeConfigurationModel'
          description: Asset fiat types configurations
          nullable: true
          type: object
        assetType:
          $ref: '#/components/schemas/ModelAssetType'
        provider:
          $ref: '#/components/schemas/IntegrationServiceProvider'
      required:
        - provider
      type: object
    CustodyProviderConfigurationModelCollectionResponseModel:
      additionalProperties: false
      description: Collection response model
      properties:
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/CustodyProviderConfigurationModel'
          nullable: true
          type: array
      type: object
    CustodyProviderConfigurationResponseModel:
      additionalProperties: false
      properties:
        custodialAccountsProvider:
          $ref: '#/components/schemas/CustodialAccountsProvider'
      type: object
    CustomAssetResponseModel:
      additionalProperties: false
      properties:
        amount:
          format: double
          nullable: true
          type: number
        assetType:
          $ref: '#/components/schemas/CustomAssetType'
        currency:
          $ref: '#/components/schemas/ModelAssetFiatType'
        description:
          nullable: true
          type: string
        id:
          format: uuid
          type: string
        name:
          nullable: true
          type: string
        symbol:
          nullable: true
          type: string
      type: object
    CustomAssetResponseModelPageResponseModel:
      additionalProperties: false
      properties:
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/CustomAssetResponseModel'
          nullable: true
          type: array
        meta:
          $ref: '#/components/schemas/PageMetadata'
      type: object
    CustomAssetType:
      enum:
        - privateSecurity
      type: string
    EnabledEndpointPermissionsResponse:
      additionalProperties: false
      description: Enabled endpoints permissions
      properties:
        encodedEndpointIds:
          description: Identifiers of enabled endpoints in base64 string
          nullable: true
          type: string
      type: object
    EndpointAccessPermissionTreeNodePatchModel:
      additionalProperties: false
      description: Patch endpoint access permission tree node model
      properties:
        isEnabled:
          description: Endpoint is enabled or not
          type: boolean
      required:
        - isEnabled
      type: object
    EndpointAccessPermissionTreeNodesResponseModel:
      additionalProperties: false
      description: The node of permission tree response model
      properties:
        childNodes:
          description: The list of child nodes
          items:
            $ref: >-
              #/components/schemas/EndpointAccessPermissionTreeNodesResponseModel
          nullable: true
          type: array
        endpointPath:
          description: The endpoint path that permission is regulated
          nullable: true
          type: string
        id:
          description: The id of the node
          format: int32
          type: integer
        isEnabled:
          description: Endpoint is enabled or not
          type: boolean
      type: object
    EndpointPermissionTreeNode:
      additionalProperties: false
      description: The node of permission tree for middleware use
      properties:
        childNodes:
          description: The list of child nodes
          items:
            $ref: '#/components/schemas/EndpointPermissionTreeNode'
          nullable: true
          type: array
        endpointPath:
          description: The endpoint path that is permission regulated
          nullable: true
          type: string
        id:
          description: The ID of the node
          format: int32
          type: integer
      type: object
    EndpointPermissionTreeNodeResponse:
      additionalProperties: false
      properties:
        roots:
          items:
            $ref: '#/components/schemas/EndpointPermissionTreeNode'
          nullable: true
          type: array
      type: object
    ExternalAccountCreateModel:
      additionalProperties: false
      description: External account create model
      properties:
        accountName:
          description: Account name
          minLength: 1
          type: string
        accountNumber:
          description: Account number
          maxLength: 17
          minLength: 1
          type: string
        accountType:
          $ref: '#/components/schemas/AccountType'
        financialAccountId:
          description: Financial account identifier
          minLength: 1
          type: string
        financialAccountsProvider:
          $ref: '#/components/schemas/FinancialAccountsProvider'
        identityId:
          description: Personal or business identity identifier
          format: uuid
          minLength: 1
          type: string
        itemId:
          description: Plaid item identifier
          minLength: 1
          type: string
        processorToken:
          description: Plaid processor token
          minLength: 1
          type: string
        routingNumber:
          description: Routing number
          maxLength: 9
          minLength: 1
          pattern: >-
            ^$|((0[0-9])|(1[0-2])|(2[1-9])|(3[0-2])|(6[1-9])|(7[0-2])|80)([0-9]{7})
          type: string
      required:
        - accountName
        - accountNumber
        - accountType
        - financialAccountId
        - identityId
        - itemId
        - processorToken
        - routingNumber
      type: object
    ExternalAccountResponseModel:
      additionalProperties: false
      description: External account response model
      properties:
        accountNumberLast4:
          description: The last 4 account numbers
          nullable: true
          type: string
        cardVerificationStatus:
          $ref: '#/components/schemas/CardVerificationStatus'
        id:
          description: External account identifier
          format: uuid
          type: string
        identityId:
          description: Identity identifier
          format: uuid
          type: string
        internationalBankAccountNumber:
          description: Exist only for type = international wire
          nullable: true
          type: string
        nameObfuscated:
          description: Exist only for type = card
          nullable: true
          type: string
        network:
          description: Exist only for type = card
          nullable: true
          type: string
        receiverName:
          description: Exists only for type = wire
          nullable: true
          type: string
        swiftCode:
          description: Exist only for type = international wire
          nullable: true
          type: string
        type:
          $ref: '#/components/schemas/ExternalAccountType'
      type: object
    ExternalAccountResponseModelPageResponseModel:
      additionalProperties: false
      properties:
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/ExternalAccountResponseModel'
          nullable: true
          type: array
        meta:
          $ref: '#/components/schemas/PageMetadata'
      type: object
    ExternalAccountResponsePrivateModel:
      additionalProperties: false
      properties:
        createdAtUtc:
          format: date-time
          type: string
        id:
          format: uuid
          type: string
        last4:
          nullable: true
          type: string
        network:
          nullable: true
          type: string
        type:
          $ref: '#/components/schemas/ExternalAccountType'
      type: object
    ExternalAccountType:
      description: External account type
      enum:
        - financial
        - wire
        - card
        - internationalWire
      type: string
    ExternalWireAccountCreateModel:
      additionalProperties: false
      description: External wire account create model
      properties:
        accountNumber:
          description: Bank account number
          maxLength: 35
          minLength: 1
          type: string
        identityId:
          description: Identity id
          format: uuid
          minLength: 1
          type: string
        receiverAddress:
          $ref: '#/components/schemas/AddressModel'
        receiverBankAddress:
          $ref: '#/components/schemas/AddressModel'
        receiverBankName:
          description: Receiver bank name
          nullable: true
          type: string
        receiverName:
          description: Receiver name
          minLength: 1
          type: string
        routingNumber:
          description: >-
            Valid 9-digit ABA routing transit number associated with the
            account.
          example: '122105155'
          maxLength: 9
          minLength: 1
          pattern: >-
            ^$|((0[0-9])|(1[0-2])|(2[1-9])|(3[0-2])|(6[1-9])|(7[0-2])|80)([0-9]{7})
          type: string
      required:
        - accountNumber
        - identityId
        - receiverAddress
        - receiverBankAddress
        - receiverName
        - routingNumber
      type: object
    FailReason:
      description: Fail reason
      enum:
        - none
        - bankAccountCreateFailed
        - bankAccountClosed
        - transactionPartFailed
        - isaIsNotConfigured
        - unexpectedErrorOccurs
        - abortFlowActivityDueFiatLockFailed
        - abortFlowActivityDueZebPayOrderFailed
        - abortFlowActivityDueCryptoLockFailed
        - abortFlowActivityDueFortressOrderRequestFailed
        - transactionPartCancelled
        - riskAssessmentRejection
        - amlScreeningFailed
        - transactionCancelled
        - abortFlowActivityDueKitCoOrderFailed
      type: string
    FiatIntegrationServiceProvider:
      enum:
        - treasuryPrime
        - cos
        - treasuryPrimeWithBankCogent
      type: string
    FinancialAccountsProvider:
      description: "Financial accounts provider, maps to Fortress.Core.Domain.Models.Entities.FundsStorages.ExternalAccounts.ExternalAccountProviderSpecific.\r\nIs part of Fortress.Core.Domain.Models.Entities.IntegrationServiceProvider."
      enum:
        - mx
        - plaid
        - plaidProcessorToken
        - plainAchInstructions
      type: string
    ForceCompleteTransactionRequest:
      additionalProperties: false
      properties:
        sendWebhook:
          type: boolean
        setAmountToZero:
          type: boolean
      type: object
    FortressPaymentBaseDataResponseModel:
      additionalProperties: false
      description: Fortress payment data response model
      properties:
        accountId:
          description: Account identifier
          format: uuid
          nullable: true
          type: string
        createdAtUtc:
          description: Gets or sets the created at UTC.
          format: date-time
          type: string
        from:
          $ref: '#/components/schemas/AssetAmountModel'
        hasTransfersThatNeedResolving:
          description: True in case has transfers that need resolving
          type: boolean
        isWaitingForZebPayBalance:
          description: True in case is waiting for ZebPay balance
          type: boolean
        mainTransactionId:
          description: Main transaction identifier
          format: uuid
          type: string
        mainTransactionStatus:
          $ref: '#/components/schemas/TransactionStatus'
        markup:
          $ref: '#/components/schemas/MarkupModel'
        network:
          $ref: '#/components/schemas/ModelNetworkChain'
        paymentId:
          description: Payment identifier
          format: uuid
          type: string
        to:
          $ref: '#/components/schemas/AssetAmountModel'
        transactionGroupId:
          description: Transaction group identifier
          format: uuid
          nullable: true
          type: string
        type:
          description: Transfer type
          nullable: true
          type: string
        zebPayOrderExecutedSuccessfully:
          description: True in case ZebPay order executed successfully
          nullable: true
          type: boolean
        zebPayOrderId:
          description: ZebPay identifier
          format: uuid
          nullable: true
          type: string
      type: object
    FortressPaymentBaseDataResponseModelPageResponseModel:
      additionalProperties: false
      properties:
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/FortressPaymentBaseDataResponseModel'
          nullable: true
          type: array
        meta:
          $ref: '#/components/schemas/PageMetadata'
      type: object
    FortressPaymentResponseModel:
      additionalProperties: false
      description: "Fortress payment data response model for particular transfer\r\nModel has the same fields as FortressPaymentBaseDataResponseModel, but inheritance is not use in order to not break order of fields"
      properties:
        accountId:
          description: Account identifier
          format: uuid
          nullable: true
          type: string
        createdAtUtc:
          description: Gets or sets the created at UTC.
          format: date-time
          type: string
        from:
          $ref: '#/components/schemas/AssetAmountModel'
        hasTransfersThatNeedResolving:
          description: True in case has transfers that need resolving
          type: boolean
        isWaitingForZebPayBalance:
          description: True in case is waiting for ZebPay balance
          type: boolean
        mainTransactionId:
          description: Main transaction identifier
          format: uuid
          type: string
        mainTransactionStatus:
          $ref: '#/components/schemas/TransactionStatus'
        markup:
          $ref: '#/components/schemas/MarkupModel'
        network:
          $ref: '#/components/schemas/ModelNetworkChain'
        paymentId:
          description: Payment identifier
          format: uuid
          type: string
        settlementTransfers:
          $ref: '#/components/schemas/SettlementTransfersModel'
        to:
          $ref: '#/components/schemas/AssetAmountModel'
        transactionGroupId:
          description: Transaction group identifier
          format: uuid
          nullable: true
          type: string
        type:
          description: Transfer type
          nullable: true
          type: string
        zebPayOrderExecutedSuccessfully:
          description: True in case ZebPay order executed successfully
          type: boolean
        zebPayOrderId:
          description: ZebPay identifier
          format: uuid
          nullable: true
          type: string
      type: object
    FundsStorageModel:
      additionalProperties: false
      description: Funds storage model
      properties:
        custodialAccountId:
          description: Gets or sets the custodial account identifier.
          format: uuid
          nullable: true
          type: string
        externalAccountId:
          description: Gets or sets the external account identifier.
          format: uuid
          nullable: true
          type: string
      type: object
    FundsStorageResponseModel:
      additionalProperties: false
      description: Funds storage response model
      properties:
        comment:
          description: Originator to beneficiary info
          nullable: true
          type: string
        cryptoAddress:
          description: Crypto address
          nullable: true
          type: string
        custodialAccountId:
          description: Custodial account identifier
          format: uuid
          nullable: true
          type: string
        custodialSubAccountId:
          description: Custodial sub account identifier
          format: uuid
          nullable: true
          type: string
        description:
          description: Description
          nullable: true
          type: string
        externalAccountId:
          description: External account identifier
          format: uuid
          nullable: true
          type: string
        identityId:
          description: Identity identifier
          format: uuid
          nullable: true
          type: string
        imad:
          $ref: '#/components/schemas/ImadModel'
        incomingTransferOrigin:
          description: Incoming transfer origin
          nullable: true
          type: string
        originator:
          $ref: '#/components/schemas/OriginatorModel'
        refCode:
          description: Reference code
          nullable: true
          type: string
        tag:
          description: Tag
          nullable: true
          type: string
      type: object
    GetInternationalWiresPageFilterRequest:
      additionalProperties: false
      properties:
        page:
          description: Page count
          format: int32
          type: integer
        pageSize:
          description: PageSize
          format: int32
          type: integer
        status:
          $ref: '#/components/schemas/InternationalWireStatus'
      required:
        - status
      type: object
    ImadModel:
      additionalProperties: false
      description: IMAD Sub-object
      properties:
        parsed:
          $ref: '#/components/schemas/ParsedModel'
        raw:
          description: "Unparsed (Raw) - Input Message Accountability Data: a unique number assigned to a wire\r\ntransfer processed through the Federal Reserve Bank’s FedwireService."
          nullable: true
          type: string
      type: object
    ImportedBalanceResponse:
      additionalProperties: false
      properties:
        generalError:
          nullable: true
          type: string
        items:
          items:
            $ref: '#/components/schemas/ImportedBalanceResponseItem'
          nullable: true
          type: array
      type: object
    ImportedBalanceResponseItem:
      additionalProperties: false
      properties:
        amount:
          nullable: true
          type: string
        assetFiatType:
          $ref: '#/components/schemas/ModelAssetFiatType'
        custodialAccountId:
          format: uuid
          nullable: true
          type: string
        error:
          nullable: true
          type: string
        networkChain:
          $ref: '#/components/schemas/ModelNetworkChain'
        organizationId:
          format: uuid
          nullable: true
          type: string
      type: object
    InitiateMovementJobRequestModel:
      additionalProperties: false
      description: Represents the request of initiation movement job
      properties:
        initiateJob:
          description: Should job be initiated or stopped
          type: boolean
        jobType:
          $ref: '#/components/schemas/JobType'
        minuteInterval:
          description: Interval in minutes for job
          format: int32
          type: integer
      required:
        - initiateJob
        - jobType
      type: object
    InstructionsResponseModel:
      additionalProperties: false
      description: Instructions response model
      properties:
        ach:
          $ref: '#/components/schemas/AchInstructionsModel'
        subAccountsWire:
          description: Wire sub account instructions.
          items:
            $ref: '#/components/schemas/WireInstructionsModel'
          nullable: true
          type: array
        wire:
          $ref: '#/components/schemas/WireInstructionsModel'
      type: object
    IntegrationServiceProvider:
      description: Providers
      enum:
        - treasuryPrime
        - mx
        - checkout
        - plainWireInstructions
        - fireblocks
        - nmi
        - cos
        - plaid
        - plaidProcessorToken
        - plainAchInstructions
        - flowRpc
        - nonApiBank
        - treasuryPrimeWithBankCogent
      type: string
    InternalAdminOrganizationRelation:
      description: >-
        Organization relations. Includes only allowed for the internal admin
        relations.
      enum:
        - permissions
        - adminConfiguration
        - roles
      type: string
    InternationalWireCreateModel:
      additionalProperties: false
      description: Represents a request to create a new international wire transfer.
      properties:
        identityId:
          description: >-
            Gets or sets the unique identifier of the identity sending the wire
            transfer.
          format: uuid
          minLength: 1
          type: string
        intermediaryBankAddress:
          $ref: '#/components/schemas/AddressModel'
        intermediaryBankName:
          description: Gets or sets the name of the intermediary bank.
          nullable: true
          type: string
        internationalBankAccountNumber:
          description: Gets or sets the international bank account number of the recipient.
          maxLength: 35
          minLength: 1
          type: string
        receiverAddress:
          $ref: '#/components/schemas/AddressModel'
        receiverBankAddress:
          $ref: '#/components/schemas/AddressModel'
        receiverBankName:
          description: Gets or sets the name of the recipient's bank.
          minLength: 1
          type: string
        receiverName:
          description: Gets or sets the name of the recipient.
          minLength: 1
          type: string
        routingNumber:
          description: Gets or sets the routing number of the intermediary bank.
          nullable: true
          type: string
        swiftCode:
          description: Gets or sets the SWIFT code of the recipient's bank.
          minLength: 1
          pattern: '^[A-Z]{6}[A-Z0-9]{2}([A-Z0-9]{3})?$'
          type: string
      required:
        - identityId
        - internationalBankAccountNumber
        - receiverAddress
        - receiverBankAddress
        - receiverBankName
        - receiverName
        - swiftCode
      type: object
    InternationalWireResponseModel:
      additionalProperties: false
      properties:
        amountToSend:
          format: double
          type: number
        createdAtUtc:
          format: date-time
          type: string
        destAccountHolderAddress:
          $ref: '#/components/schemas/AddressModel'
        destAccountHolderName:
          nullable: true
          type: string
        destBank:
          nullable: true
          type: string
        destBankAccountNumber:
          nullable: true
          type: string
        destBankAddress:
          $ref: '#/components/schemas/AddressModel'
        destBankSwift:
          nullable: true
          type: string
        imadReferenceNumber:
          nullable: true
          type: string
        internationalBankAccountNumber:
          nullable: true
          type: string
        lastUpdatedAtUtc:
          format: date-time
          nullable: true
          type: string
        memoLine:
          nullable: true
          type: string
        organizationId:
          format: uuid
          type: string
        paymentId:
          format: uuid
          type: string
        purposeOfPayment:
          nullable: true
          type: string
        referenceNumber:
          nullable: true
          type: string
        sourceAccountNumber:
          nullable: true
          type: string
        sourceCustodialAccountId:
          nullable: true
          type: string
        status:
          $ref: '#/components/schemas/InternationalWireStatus'
      type: object
    InternationalWireResponseModelPageResponseModel:
      additionalProperties: false
      properties:
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/InternationalWireResponseModel'
          nullable: true
          type: array
        meta:
          $ref: '#/components/schemas/PageMetadata'
      type: object
    InternationalWireStatus:
      enum:
        - none
        - inProgress
        - completed
        - failed
      type: string
    InternationalWireStatusUpdateModel:
      additionalProperties: false
      description: Model for updating the status of an international wire request
      properties:
        status:
          $ref: '#/components/schemas/InternationalWireStatus'
      required:
        - status
      type: object
    InvalidateCacheModel:
      additionalProperties: false
      properties:
        cacheType:
          $ref: '#/components/schemas/CacheType'
        identifier:
          description: 'Identifire (OrgId, OpsUserId, AuthId)'
          nullable: true
          type: string
      required:
        - cacheType
      type: object
    JobType:
      enum:
        - fromInactivatedAccountToFiatMigrationAccount
        - fromActivatedAccountToFiatOmnibusAccount
      type: string
    LiquidityProvider:
      description: Liquidity provider
      enum:
        - zebPay
        - fortress
        - kitco
        - coinRoutes
        - talos
      type: string
    LiquidityProviderOrderResponseModel:
      additionalProperties: false
      description: ZebPay order response model for particular transfer
      properties:
        amount:
          description: Order amount
          format: double
          type: number
        asset:
          $ref: '#/components/schemas/ModelAssetFiatType'
        createdAtUtc:
          description: Gets or sets the created at UTC.
          format: date-time
          type: string
        isWaitingForBalance:
          description: True in case is waiting for balance
          type: boolean
        network:
          $ref: '#/components/schemas/ModelNetworkChain'
        orderExecutedSuccessfully:
          description: True in case order executed successfully
          nullable: true
          type: boolean
        orderId:
          description: Order identifier
          format: uuid
          nullable: true
          type: string
        settlementTransfers:
          $ref: '#/components/schemas/OrderSettlementTransfersModel'
      type: object
    LiquidityProviderOrdersDataResponseModel:
      additionalProperties: false
      description: Liquidity Provider orders data response model
      properties:
        amount:
          description: Order amount
          format: double
          type: number
        asset:
          $ref: '#/components/schemas/ModelAssetFiatType'
        createdAtUtc:
          description: Gets or sets the created at UTC.
          format: date-time
          type: string
        isWaitingForBalance:
          description: True in case is waiting for ZebPay balance
          type: boolean
        network:
          $ref: '#/components/schemas/ModelNetworkChain'
        orderExecutedSuccessfully:
          description: True in case ZebPay order executed successfully
          nullable: true
          type: boolean
        orderId:
          description: Order identifier
          format: uuid
          nullable: true
          type: string
      type: object
    LiquidityProviderOrdersDataResponseModelPageResponseModel:
      additionalProperties: false
      properties:
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/LiquidityProviderOrdersDataResponseModel'
          nullable: true
          type: array
        meta:
          $ref: '#/components/schemas/PageMetadata'
      type: object
    ManuallyProcessedTransferRequestModel:
      additionalProperties: false
      properties:
        amount:
          format: double
          minimum: 0.01
          type: number
        description:
          minLength: 1
          type: string
        destinationCurrency:
          $ref: '#/components/schemas/ModelAssetFiatType'
        destinationCustidialAccountId:
          format: uuid
          nullable: true
          type: string
        network:
          $ref: '#/components/schemas/ModelNetworkChain'
        sourceCurency:
          $ref: '#/components/schemas/ModelAssetFiatType'
        sourceCustidialAccountId:
          format: uuid
          nullable: true
          type: string
      required:
        - description
      type: object
    MarkupModel:
      additionalProperties: false
      description: Markup model
      properties:
        amount:
          description: Amount
          format: double
          nullable: true
          type: number
        asset:
          $ref: '#/components/schemas/ModelAssetFiatType'
        basisPoints:
          description: Basis points
          format: double
          nullable: true
          type: number
      type: object
    MarkupRequestModel:
      additionalProperties: false
      properties:
        commonMarkup:
          $ref: '#/components/schemas/CommonMarkupModel'
        tradingPairsMarkup:
          items:
            $ref: '#/components/schemas/TradingPairMarkupModel'
          nullable: true
          type: array
      required:
        - commonMarkup
      type: object
    MarkupResponseModel:
      additionalProperties: false
      properties:
        commonMarkup:
          $ref: '#/components/schemas/CommonMarkupModel'
        tradingPairsMarkup:
          items:
            $ref: '#/components/schemas/TradingPairMarkupModel'
          nullable: true
          type: array
      type: object
    ModelAssetFiatType:
      description: Asset fiat type
      enum:
        - usd
        - btc
        - eth
        - matic
        - usdc
        - sol
        - ada
        - xlm
        - dot
        - link
        - algo
        - bnb
        - busd
        - avax
        - ltc
        - uni
        - crv
        - aave
        - eos
        - bch
        - xtz
        - comp
        - bat
        - shib
        - doge
        - grt
        - sushi
        - sand
        - enj
        - axs
        - mana
        - mkr
        - yfi
        - atom
        - ape
        - dai
        - usdt
        - near
        - trx
        - ftm
        - xrp
        - flrns
        - flow
        - smtf
        - qnt
        - chz
        - gala
        - hbar
        - gold
        - silver
      type: string
    ModelAssetType:
      description: Asset type
      enum:
        - fiatCurrency
        - cryptoCurrency
        - privateSecurity
        - nft
        - preciousMetal
      type: string
    ModelAssetTypeV2:
      description: Asset type V2
      enum:
        - fiat
        - crypto
        - privateSecurity
        - nft
        - preciousMetal
      type: string
    ModelCustodialAccountStatus:
      enum:
        - open
        - suspended
      type: string
    ModelNetworkChain:
      description: Supported networks
      enum:
        - mainnet
        - ropsten
        - goerli
        - bnbSmartChainMainnet
        - eosMainnet
        - bnbSmartChainTestnet
        - polygonMainnet
        - fantomMainnet
        - eosTestnet
        - bitcoinMainnet
        - cosmosHub
        - cosmosHubTestnet
        - bitcoinTestnet
        - bchMainnet
        - bchTestnet
        - solanaMainnet
        - solanaDevnet
        - solanaTestnet
        - polkadotMainnet
        - polkadotWestend
        - cardanoMainnet
        - cardanoTestnet
        - algorandMainnet
        - algorandTestnet
        - stellarMainnet
        - stellarTestnet
        - litecoinMainnet
        - litecoinTestnet
        - tezosMainnet
        - tezosTestnet
        - arbitrumMainnet
        - avalancheFuji
        - avalancheMainnet
        - polygonMumbai
        - rippleMainnet
        - rippleTestnet
        - arbitrumGoerli
        - dogeTestnet
        - dogeMainnet
        - nearMainnet
        - nearTestnet
        - tronMainnet
        - tronTestnet
        - flowMainnet
        - flowTestnet
        - hederaMainnet
        - hederaTestnet
      type: string
    ModelOrderType:
      description: Order type
      enum:
        - market
        - limit
      type: string
    Mt103ReferenceBaseModel:
      additionalProperties: false
      properties:
        accountWithInstitution:
          nullable: true
          type: string
        bankOperationCode:
          minLength: 1
          type: string
        beneficiaryCustomer:
          $ref: '#/components/schemas/BeneficiaryCustomer'
        currency_instructedAmount:
          $ref: '#/components/schemas/CurrencyInstructedAmount'
        detailsOfCharges:
          minLength: 1
          type: string
        exchangeRate:
          nullable: true
          type: string
        instructionCode:
          nullable: true
          type: string
        intermediaryInstitution:
          nullable: true
          type: string
        orderingCustomer:
          $ref: '#/components/schemas/OrderingCustomer'
        orderingInstitution:
          nullable: true
          type: string
        receiversCharges:
          nullable: true
          type: string
        receiversCorrespondent:
          nullable: true
          type: string
        regulatoryReporting:
          nullable: true
          type: string
        remittanceInformation:
          nullable: true
          type: string
        senderToReceiverInformation:
          nullable: true
          type: string
        sendersCharges:
          nullable: true
          type: string
        sendersCorrespondent:
          nullable: true
          type: string
        sendersReference:
          minLength: 1
          type: string
        sendingInstitution:
          nullable: true
          type: string
        thirdReimbursementInstitution:
          nullable: true
          type: string
        timeIndication:
          nullable: true
          type: string
        transactionTypeCode:
          nullable: true
          type: string
        valueDate_currency_interbankSettledAmount:
          $ref: '#/components/schemas/ValueDateCurrencyInterbankSettledAmount'
      required:
        - bankOperationCode
        - beneficiaryCustomer
        - detailsOfCharges
        - orderingCustomer
        - sendersReference
        - valueDate_currency_interbankSettledAmount
      type: object
    Mt103ReferenceResponseModel:
      additionalProperties: false
      properties:
        accountWithInstitution:
          nullable: true
          type: string
        bankOperationCode:
          nullable: true
          type: string
        beneficiaryCustomer:
          $ref: '#/components/schemas/BeneficiaryCustomer'
        currency_instructedAmount:
          $ref: '#/components/schemas/CurrencyInstructedAmount'
        detailsOfCharges:
          nullable: true
          type: string
        exchangeRate:
          nullable: true
          type: string
        instructionCode:
          nullable: true
          type: string
        intermediaryInstitution:
          nullable: true
          type: string
        orderingCustomer:
          $ref: '#/components/schemas/OrderingCustomer'
        orderingInstitution:
          nullable: true
          type: string
        receiversCharges:
          nullable: true
          type: string
        receiversCorrespondent:
          nullable: true
          type: string
        regulatoryReporting:
          nullable: true
          type: string
        remittanceInformation:
          nullable: true
          type: string
        senderToReceiverInformation:
          nullable: true
          type: string
        sendersCharges:
          nullable: true
          type: string
        sendersCorrespondent:
          nullable: true
          type: string
        sendersReference:
          nullable: true
          type: string
        sendingInstitution:
          nullable: true
          type: string
        thirdReimbursementInstitution:
          nullable: true
          type: string
        timeIndication:
          nullable: true
          type: string
        transactionId:
          format: uuid
          type: string
        transactionTypeCode:
          nullable: true
          type: string
        valueDate_currency_interbankSettledAmount:
          $ref: '#/components/schemas/ValueDateCurrencyInterbankSettledAmount'
      type: object
    NetworkChain:
      enum:
        - mainnet
        - rinkeby
        - goerli
        - kovan
        - bnbSmartChainMainnet
        - eosMainnet
        - bnbSmartChainTestnet
        - polygonMainnet
        - fantomMainnet
        - eosTestnet
        - bitcoinMainnet
        - cosmosHub
        - cosmosHubTestnet
        - bitcoinTestnet
        - bchMainnet
        - bchTestnet
        - solanaMainnet
        - solanaDevnet
        - solanaTestnet
        - polkadotMainnet
        - polkadotWestend
        - cardanoMainnet
        - cardanoTestnet
        - algorandMainnet
        - algorandTestnet
        - stellarMainnet
        - stellarTestnet
        - litecoinMainnet
        - litecoinTestnet
        - tezosMainnet
        - tezosTestnet
        - arbitrumMainnet
        - avalancheFuji
        - avalancheMainnet
        - polygonMumbai
        - rippleMainnet
        - rippleTestnet
        - arbitrumGoerli
        - dogeTestnet
        - dogeMainnet
        - nearMainnet
        - nearTestnet
        - tronMainnet
        - tronTestnet
        - flowMainnet
        - flowTestnet
        - hederaMainnet
        - hederaTestnet
      type: string
    NonApiClearingAccountDataModel:
      additionalProperties: false
      description: Non Api clearing account data model
      properties:
        accountNumber:
          description: Clearing account number
          nullable: true
          type: string
        bankAddress:
          $ref: '#/components/schemas/AddressModel'
        bankName:
          description: Name of bank
          nullable: true
          type: string
        fiat:
          $ref: '#/components/schemas/ModelAssetFiatType'
        nickName:
          description: NickName for internal use
          nullable: true
          type: string
        routingNumber:
          description: Clearing Account routing number
          maxLength: 9
          minLength: 1
          pattern: >-
            ^$|((0[0-9])|(1[0-2])|(2[1-9])|(3[0-2])|(6[1-9])|(7[0-2])|80)([0-9]{7})
          type: string
        swiftCode:
          description: Clearing account SWIFT Code
          nullable: true
          type: string
      required:
        - routingNumber
      type: object
    OperationType:
      description: Operation type
      enum:
        - base
        - fee
        - isa
        - lock
        - releaseLock
        - cancelLock
        - pending
        - releasePending
        - cancelPending
        - feeCompensation
        - limits
        - reverse
        - lockTradable
        - pendingTradable
        - releaseLockTradable
        - cancelLockTradable
        - releasePendingTradable
        - cancelPendingTradable
        - bookToOmnibus
        - omnibusBase
        - omnibusLock
        - omnibusReleaseLock
        - omnibusPending
        - omnibusReleasePending
        - omnibusWithdrawal
        - accountWithdrawal
        - negativeBalance
        - return
        - omnibusBookToMaster
        - retryTransaction
        - omnibusInternal
        - omnibusReturn
        - omnibusCancelLock
        - cancelTransaction
        - omnibusNegativeBalance
        - bookToFiatMigrationAccount
      type: string
    OpsUserPatchModel:
      additionalProperties: false
      description: Ops user patch model
      properties:
        email:
          description: Gets or sets the email.
          nullable: true
          type: string
        name:
          description: Gets or sets the name.
          maxLength: 500
          nullable: true
          type: string
      type: object
    OpsUserPatchRolesModel:
      additionalProperties: false
      description: Ops user patch roles model
      properties:
        roles:
          description: Ops user roles
          items:
            type: string
          nullable: true
          type: array
      type: object
    OpsUserRelation:
      description: >-
        Ops user relations. Includes only allowed for the security admin
        relations.
      enum:
        - roles
      type: string
    OpsUserRequestModel:
      additionalProperties: false
      description: Create Ops user model
      properties:
        email:
          description: Gets or sets the email.
          minLength: 1
          type: string
        name:
          description: Gets or sets the name.
          maxLength: 500
          minLength: 1
          type: string
      required:
        - email
        - name
      type: object
    OpsUserResponseModel:
      additionalProperties: false
      description: Ops user response model
      properties:
        email:
          description: Gets or sets the email.
          nullable: true
          type: string
        id:
          description: Gets or sets the identifier.
          format: uuid
          type: string
        name:
          description: Gets or sets the name.
          nullable: true
          type: string
        password:
          description: >-
            Gets or sets the password. Present only in the response of ops user
            creation.
          nullable: true
          type: string
      type: object
    OpsUserWithIncludeResponseModel:
      additionalProperties: false
      description: Ops user response model with include properties
      properties:
        email:
          description: Gets or sets the email.
          nullable: true
          type: string
        id:
          description: Gets or sets the identifier.
          format: uuid
          type: string
        name:
          description: Gets or sets the name.
          nullable: true
          type: string
        password:
          description: >-
            Gets or sets the password. Present only in the response of ops user
            creation.
          nullable: true
          type: string
        roles:
          description: Ops user roles
          items:
            $ref: '#/components/schemas/ApiRoleResponseModel'
          nullable: true
          type: array
      type: object
    OpsUserWithIncludeResponseModelPageResponseModel:
      additionalProperties: false
      properties:
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/OpsUserWithIncludeResponseModel'
          nullable: true
          type: array
        meta:
          $ref: '#/components/schemas/PageMetadata'
      type: object
    OrderSettlementTransfersModel:
      additionalProperties: false
      description: Settlement transfer model
      properties:
        fromFortress:
          $ref: '#/components/schemas/OrderTransferModel'
        toFortress:
          $ref: '#/components/schemas/OrderTransferModel'
      type: object
    OrderTransferModel:
      additionalProperties: false
      description: Transfer model
      properties:
        amount:
          description: Transfer amount
          format: double
          type: number
        asset:
          $ref: '#/components/schemas/ModelAssetFiatType'
        network:
          $ref: '#/components/schemas/ModelNetworkChain'
        status:
          $ref: '#/components/schemas/SettlementTransferStatus'
      type: object
    OrderingCustomer:
      additionalProperties: false
      properties:
        account_identifierCode:
          $ref: '#/components/schemas/AccountIdentifierCode'
        account_nameAddress:
          $ref: '#/components/schemas/AccountNameAddress'
        partyIdentifier_nameAddress:
          $ref: '#/components/schemas/PartyIdentifierNameAddress'
      type: object
    OrgAdminConfigurationPatchModel:
      additionalProperties: false
      description: Organization configuration patch model
      properties:
        achDescriptor:
          description: ACHDescriptor for COS ACH payments
          maxLength: 10
          nullable: true
          pattern: '^[a-zA-Z0-9 ]*$'
          type: string
        assetsToAllowNegativeBalances:
          description: Assets to allow negative balances
          items:
            $ref: '#/components/schemas/ModelAssetFiatType'
          nullable: true
          type: array
        cardProcessingProvider:
          $ref: '#/components/schemas/CardProcessingProvider'
        custodyModel:
          $ref: '#/components/schemas/CustodyModel'
        defaultOmnibusId:
          description: Gets or sets default OmnibusId.
          format: uuid
          nullable: true
          type: string
        defaultTrustBucketId:
          description: Gets or sets default TrustBucketId.
          format: uuid
          nullable: true
          type: string
        depositsClearingModel:
          $ref: '#/components/schemas/CustodyModel'
        feesAccountId:
          description: Gets or sets fees account Id
          format: uuid
          nullable: true
          type: string
        financialAccountsProvider:
          $ref: '#/components/schemas/FinancialAccountsProvider'
        isaAccountId:
          description: Gets or sets ISA account Id
          format: uuid
          nullable: true
          type: string
        useTradingShortcut:
          description: Use trading shortcut in case true
          nullable: true
          type: boolean
        withdrawalsClearingModel:
          $ref: '#/components/schemas/CustodyModel'
      type: object
    OrgAdminConfigurationResponseModel:
      additionalProperties: false
      description: Model for organization configuration
      properties:
        achDescriptor:
          description: ACHDescriptor for COS payments description
          nullable: true
          type: string
        assetsToAllowNegativeBalances:
          description: Assets to allow negative balances
          items:
            $ref: '#/components/schemas/ModelAssetFiatType'
          nullable: true
          type: array
        cardProcessingProvider:
          $ref: '#/components/schemas/CardProcessingProvider'
        custodialAccountsProvider:
          $ref: '#/components/schemas/CustodialAccountsProvider'
        custodyModel:
          $ref: '#/components/schemas/CustodyModel'
        defaultOmnibusId:
          description: Gets or sets default OmnibusId.
          format: uuid
          nullable: true
          type: string
        defaultTrustBucketId:
          description: Gets or sets default trustBucketId.
          format: uuid
          type: string
        depositsClearingModel:
          $ref: '#/components/schemas/CustodyModel'
        feesAccountId:
          description: Gets or sets fees account Id
          format: uuid
          nullable: true
          type: string
        financialAccountsProvider:
          $ref: '#/components/schemas/FinancialAccountsProvider'
        isaAccountId:
          description: Gets or sets ISA account Id
          format: uuid
          nullable: true
          type: string
        useTradingShortcut:
          description: Use trading shortcut in case true
          type: boolean
        withdrawalsClearingModel:
          $ref: '#/components/schemas/CustodyModel'
      type: object
    OrgPermissionsPatchModel:
      additionalProperties: false
      description: Organization permissions patch model
      properties:
        allowedSubApis:
          description: Represents which Sub APIs are allowed for some specific organization
          items:
            $ref: '#/components/schemas/AllowedSubApi'
          nullable: true
          type: array
        cryptoLiquidityProvider:
          $ref: '#/components/schemas/CryptoLiquidityProvider'
        feesAccountAllowed:
          description: Gets or sets a value indicating whether fees account is allowed.
          nullable: true
          type: boolean
        isaAccountAllowed:
          description: Gets or sets a value indicating whether isa account is allowed.
          nullable: true
          type: boolean
      type: object
    OrgPermissionsResponseModel:
      additionalProperties: false
      description: Model for organization permissions
      properties:
        allowedSubApis:
          description: Represents which Sub APIs are allowed for some specific organization
          items:
            $ref: '#/components/schemas/AllowedSubApi'
          nullable: true
          type: array
        cryptoLiquidityProvider:
          $ref: '#/components/schemas/CryptoLiquidityProvider'
        feesAccountAllowed:
          description: Gets or sets a value indicating whether fees account is allowed.
          type: boolean
        isaAccountAllowed:
          description: Gets or sets a value indicating whether isa account is allowed.
          type: boolean
      type: object
    OrganizationAdminResponseModel:
      additionalProperties: false
      description: Organization response model with admin-only accessible fields
      properties:
        adminConfiguration:
          $ref: '#/components/schemas/OrgAdminConfigurationResponseModel'
        email:
          description: Gets or sets the email.
          nullable: true
          type: string
        id:
          description: Gets or sets the identifier.
          format: uuid
          type: string
        name:
          description: Gets or sets the name.
          nullable: true
          type: string
        password:
          description: >-
            Gets or sets the password. Present only in the response of
            organization creation.
          nullable: true
          type: string
        permissions:
          $ref: '#/components/schemas/OrgPermissionsResponseModel'
        phone:
          description: Gets or sets the phone.
          nullable: true
          type: string
        readonlyEmail:
          description: Gets or sets the email.
          nullable: true
          type: string
        readonlyPassword:
          description: >-
            Gets or sets the password. Present only in the response of readonly
            user creation.
          nullable: true
          type: string
        roles:
          description: Get organization roles if they were included
          items:
            $ref: '#/components/schemas/ApiRoleResponseModel'
          nullable: true
          type: array
        webhookConfig:
          $ref: '#/components/schemas/WebhookConfigResponseModel'
      type: object
    OrganizationAdminResponseModelPageResponseModel:
      additionalProperties: false
      properties:
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/OrganizationAdminResponseModel'
          nullable: true
          type: array
        meta:
          $ref: '#/components/schemas/PageMetadata'
      type: object
    OrganizationAuthIdentifierResponseModel:
      additionalProperties: false
      description: Organization auth identifier response
      properties:
        authIdentifier:
          description: Organization auth identifier
          nullable: true
          type: string
      type: object
    OrganizationPatchModel:
      additionalProperties: false
      description: Model for organization partial update
      properties:
        email:
          description: Gets or sets the email.
          nullable: true
          type: string
        name:
          description: Gets or sets the name.
          maxLength: 500
          nullable: true
          type: string
        phone:
          description: Gets or sets the phone.
          nullable: true
          type: string
      type: object
    OrganizationPatchRolesModel:
      additionalProperties: false
      description: Organization patch roles model
      properties:
        roles:
          description: Organization roles
          items:
            type: string
          nullable: true
          type: array
      type: object
    OrganizationRequestModel:
      additionalProperties: false
      description: Create organization model
      properties:
        email:
          description: Gets or sets the email.
          minLength: 1
          type: string
        name:
          description: Gets or sets the name.
          maxLength: 500
          minLength: 1
          type: string
        phone:
          description: Gets or sets the phone.
          nullable: true
          type: string
        provider:
          $ref: '#/components/schemas/CustodialAccountsProvider'
      required:
        - email
        - name
      type: object
    OrganizationResponseModel:
      additionalProperties: false
      description: Organization data
      properties:
        email:
          description: Gets or sets the email.
          nullable: true
          type: string
        id:
          description: Gets or sets the identifier.
          format: uuid
          type: string
        name:
          description: Gets or sets the name.
          nullable: true
          type: string
        password:
          description: >-
            Gets or sets the password. Present only in the response of
            organization creation.
          nullable: true
          type: string
        phone:
          description: Gets or sets the phone.
          nullable: true
          type: string
        readonlyEmail:
          description: Gets or sets the email.
          nullable: true
          type: string
        readonlyPassword:
          description: >-
            Gets or sets the password. Present only in the response of readonly
            user creation.
          nullable: true
          type: string
        webhookConfig:
          $ref: '#/components/schemas/WebhookConfigResponseModel'
      type: object
    OrganiztionBaseDataResponseModel:
      additionalProperties: false
      description: Organization data
      properties:
        email:
          description: Gets or sets the email.
          nullable: true
          type: string
        id:
          description: Gets or sets the identifier.
          format: uuid
          type: string
        name:
          description: Gets or sets the name.
          nullable: true
          type: string
        phone:
          description: Gets or sets the phone.
          nullable: true
          type: string
      type: object
    OriginatorAddressModel:
      additionalProperties: false
      description: A Wire Bank sub-object containing information about the wire originator
      properties:
        parsed:
          $ref: '#/components/schemas/AddressModel'
        raw:
          description: Unparsed address
          items:
            type: string
          nullable: true
          type: array
      type: object
    OriginatorModel:
      additionalProperties: false
      description: A Wire Bank sub-object containing information about the wire originator
      properties:
        address:
          $ref: '#/components/schemas/OriginatorAddressModel'
        bankData:
          $ref: '#/components/schemas/BankDataModel'
        name:
          description: Originator name
          nullable: true
          type: string
      type: object
    OriginatorRequestModel:
      additionalProperties: false
      properties:
        address:
          $ref: '#/components/schemas/AddressRequestModel'
        name:
          nullable: true
          type: string
      type: object
    PageMetadata:
      additionalProperties: false
      properties:
        pageCount:
          format: int32
          type: integer
        resourceCount:
          format: int32
          type: integer
      type: object
    ParsedModel:
      additionalProperties: false
      description: Parsed IMAD Sub-object
      properties:
        cycleDate:
          description: CycleDate - wire transfer date
          format: date-time
          nullable: true
          type: string
        inputSequenceNumber:
          description: InputSequenceNumber - a 6 digit number assigned for uniqueness
          nullable: true
          type: string
        inputSource:
          description: >-
            InputSource - 8 Alpha or Alpha-Numeric characters identifying the
            source
          nullable: true
          type: string
      type: object
    PartyIdentifierNameAddress:
      additionalProperties: false
      properties:
        nameAddress:
          nullable: true
          type: string
        partyIdentifier:
          nullable: true
          type: string
      type: object
    PaymentApprovalConfigurationModel:
      additionalProperties: false
      properties:
        maxTimeToApproveInHours:
          format: double
          nullable: true
          type: number
        paymentApprovalIsRequired:
          nullable: true
          type: boolean
      type: object
    PaymentRejectedReason:
      enum:
        - rejectedByAdmin
        - approvalTimeExpired
      type: string
    PaymentResolution:
      enum:
        - markAsResolved
        - transferToAccount
        - return
      type: string
    PaymentResponseModel:
      additionalProperties: false
      description: Payment response model
      properties:
        assetTypeId:
          description: Id of Asset type (for Private Security)
          format: uuid
          nullable: true
          type: string
        comment:
          description: Comment
          nullable: true
          type: string
        cryptoAmount:
          description: Crypto amount
          format: double
          nullable: true
          type: number
        currency:
          $ref: '#/components/schemas/ModelAssetFiatType'
        destination:
          $ref: '#/components/schemas/FundsStorageResponseModel'
        destinationCurrency:
          $ref: '#/components/schemas/ModelAssetFiatType'
        funds:
          description: Funds
          format: double
          nullable: true
          type: number
        id:
          description: Payment identifier
          format: uuid
          type: string
        memo:
          description: Memo
          nullable: true
          type: string
        network:
          $ref: '#/components/schemas/ModelNetworkChain'
        purposeOfPayment:
          description: Purpose of payment
          nullable: true
          type: string
        quantity:
          description: Precious metal quantity
          format: double
          nullable: true
          type: number
        rejectedReason:
          $ref: '#/components/schemas/PaymentRejectedReason'
        source:
          $ref: '#/components/schemas/FundsStorageResponseModel'
        sourceCurrency:
          $ref: '#/components/schemas/ModelAssetFiatType'
        status:
          $ref: '#/components/schemas/PaymentStatus'
        txHash:
          description: Transaction hash
          nullable: true
          type: string
        type:
          $ref: '#/components/schemas/PaymentType'
      type: object
    PaymentResponseModelPageResponseModel:
      additionalProperties: false
      properties:
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/PaymentResponseModel'
          nullable: true
          type: array
        meta:
          $ref: '#/components/schemas/PageMetadata'
      type: object
    PaymentStatus:
      description: Payment status
      enum:
        - new
        - completed
        - approvalNeeded
        - rejected
      type: string
    PaymentType:
      description: Payment type
      enum:
        - internal
        - cardDeposit
        - cardWithdrawal
        - achDeposit
        - achWithdrawal
        - wireDeposit
        - wireWithdrawal
        - buyCrypto
        - sellCrypto
        - depositCrypto
        - withdrawalCrypto
        - internalCrypto
        - privateSecurityDeposit
        - privateSecurityWithdrawal
        - privateSecurityInternal
        - incomingAchDeposit
        - incomingAchWithdrawal
        - checkDeposit
        - internationalWireWithdrawal
        - initialDeposit
        - achDepositReturn
        - achWithdrawalReturn
        - achDepositReverse
        - achWithdrawalReverse
        - wireDepositReturn
        - wireWithdrawalReturn
        - wireDepositReverse
        - wireWithdrawalReverse
        - buyPreciousMetal
        - sellPreciousMetal
        - depositPreciousMetal
        - withdrawalPreciousMetal
        - manuallyProcessed
        - wireDepositPartialReturn
      type: string
    PaymentTypeForClearingAccount:
      description: Payment type
      enum:
        - achDeposit
        - achWithdrawal
        - wireDeposit
        - wireWithdrawal
      type: string
    PaymentTypeToSuspenseAccount:
      enum:
        - wireDeposit
        - incomingAchDeposit
      type: string
    ProblemDetails:
      additionalProperties: {}
      properties:
        detail:
          nullable: true
          type: string
        instance:
          nullable: true
          type: string
        status:
          format: int32
          nullable: true
          type: integer
        title:
          nullable: true
          type: string
        type:
          nullable: true
          type: string
      type: object
    ProcessStuckPaymentRequestModel:
      additionalProperties: false
      properties:
        paymentIds:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
        resolutionMethod:
          $ref: '#/components/schemas/ProcessStuckPaymentResolution'
      type: object
    ProcessStuckPaymentResolution:
      enum:
        - retry
        - abort
      type: string
    ReadonlyUserRequestModel:
      additionalProperties: false
      properties:
        email:
          description: Gets or sets the email.
          minLength: 1
          type: string
      required:
        - email
      type: object
    ResolvePaymentRequestModel:
      additionalProperties: false
      properties:
        custodialAccountId:
          format: uuid
          nullable: true
          type: string
        resolution:
          $ref: '#/components/schemas/PaymentResolution'
      type: object
    ResolvePaymentResponseModel:
      additionalProperties: false
      properties:
        paymentId:
          format: uuid
          type: string
      type: object
    RetryTradingRequest:
      additionalProperties: false
      properties:
        transactionIds:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
      type: object
    SandboxIncomingAchModel:
      additionalProperties: false
      properties:
        amount:
          exclusiveMinimum: true
          format: double
          minimum: 0
          type: number
        origin:
          nullable: true
          type: string
      type: object
    SandboxIncomingAchWithdrawalModel:
      additionalProperties: false
      properties:
        amount:
          exclusiveMinimum: true
          format: double
          minimum: 0
          type: number
        destinationDescription:
          nullable: true
          type: string
      type: object
    SandboxIncomingCheckModel:
      additionalProperties: false
      properties:
        amount:
          exclusiveMinimum: true
          format: double
          minimum: 0
          type: number
        description:
          nullable: true
          type: string
      type: object
    SandboxIncomingWireModel:
      additionalProperties: false
      properties:
        amount:
          exclusiveMinimum: true
          format: double
          minimum: 0
          type: number
        bankData:
          $ref: '#/components/schemas/BankDataRequestModel'
        comment:
          nullable: true
          type: string
        custodialAccountIds:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
        isManuallyPosted:
          type: boolean
        origin:
          nullable: true
          type: string
        originator:
          $ref: '#/components/schemas/OriginatorRequestModel'
        sendWireWithoutIncomingWireId:
          type: boolean
      type: object
    SetProviderCrossOrganizationAccountRequestModel:
      additionalProperties: false
      description: Set Provider Cross Organization Account Request Model
      properties:
        asset:
          $ref: '#/components/schemas/ModelAssetFiatType'
        assetType:
          $ref: '#/components/schemas/ModelAssetTypeV2'
        isMain:
          description: Is Main Account
          type: boolean
        provider:
          $ref: '#/components/schemas/IntegrationServiceProvider'
      type: object
    SettlementAccountsConfigurationRequestModel:
      additionalProperties: false
      properties:
        assets:
          items:
            $ref: '#/components/schemas/ModelAssetFiatType'
          type: array
      required:
        - assets
      type: object
    SettlementAccountsConfigurationResponseModel:
      additionalProperties: false
      properties:
        accountId:
          format: uuid
          type: string
        assets:
          items:
            type: string
          nullable: true
          type: array
      type: object
    SettlementAccountsConfigurationResponseModelCollectionResponseModel:
      additionalProperties: false
      description: Collection response model
      properties:
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/SettlementAccountsConfigurationResponseModel'
          nullable: true
          type: array
      type: object
    SettlementTransferStatus:
      description: Settlement transfer status
      enum:
        - notStarted
        - inProgress
        - completed
        - waitingForResolving
        - waitingForEnoughBalance
      type: string
    SettlementTransfersModel:
      additionalProperties: false
      description: Settlement transfer model
      properties:
        fortressToIntegrator:
          $ref: '#/components/schemas/TransferModel'
        fortressToZebPay:
          $ref: '#/components/schemas/TransferModel'
        integratorToFortress:
          $ref: '#/components/schemas/TransferModel'
        zebPayToFortress:
          $ref: '#/components/schemas/TransferModel'
      type: object
    SubAccountBalanceResponseModel:
      additionalProperties: false
      properties:
        disbursable:
          description: Disbursable balance
          format: double
          type: number
        locked:
          description: Locked balance
          format: double
          type: number
        pending:
          description: Pending balance
          format: double
          type: number
        subAccountId:
          description: Disbursable balance
          format: uuid
          type: string
        total:
          description: Total balance
          format: double
          type: number
      type: object
    SubAccountFundsStorageModel:
      additionalProperties: false
      description: Funds storage model with sub account support
      properties:
        custodialAccountId:
          description: Gets or sets the custodial account identifier.
          format: uuid
          nullable: true
          type: string
        custodialSubAccountId:
          description: Gets or sets the custodial sub account identifier.
          format: uuid
          nullable: true
          type: string
        externalAccountId:
          description: Gets or sets the external account identifier.
          format: uuid
          nullable: true
          type: string
      type: object
    SubAccountResponseModel:
      additionalProperties: false
      description: Sub-account response model
      properties:
        id:
          description: Sub-account identifier
          format: uuid
          type: string
      type: object
    SubBalancesResponseModel:
      additionalProperties: false
      properties:
        lockedPendingFromTrade:
          format: double
          type: number
        pendingFromTrade:
          format: double
          type: number
      type: object
    SystemAccountsValidationResultModel:
      additionalProperties: false
      properties:
        actionsPerformed:
          items:
            type: string
          nullable: true
          type: array
        errors:
          items:
            type: string
          nullable: true
          type: array
        upToDate:
          items:
            type: string
          nullable: true
          type: array
        warnings:
          items:
            type: string
          nullable: true
          type: array
      type: object
    TopUpInternalOmnibusRequestModel:
      additionalProperties: false
      description: Represents the request mode for internal omnibus balance top up
      properties:
        amount:
          description: Amount of USD to transfer to the internal omnibus account
          exclusiveMinimum: true
          format: double
          minimum: 0
          type: number
      type: object
    TradeRequestModel:
      additionalProperties: false
      description: Buy/sell crypto request model
      properties:
        accountId:
          description: Custodial account identifier
          format: uuid
          type: string
        comment:
          description: Gets or sets the comment.
          maxLength: 1000
          nullable: true
          type: string
        from:
          $ref: '#/components/schemas/AssetDataFrom'
        liquidityProvider:
          $ref: '#/components/schemas/LiquidityProvider'
        paymentType:
          $ref: '#/components/schemas/PaymentType'
        spreadBasisPoints:
          description: Integrator spread basis points
          format: double
          nullable: true
          type: number
        spreadFiatPerUnit:
          description: Integrator spread fixed amount (for PM trading ONLY)
          format: double
          nullable: true
          type: number
        to:
          $ref: '#/components/schemas/AssetData'
        type:
          $ref: '#/components/schemas/ModelOrderType'
      required:
        - from
        - to
      type: object
    TradeResponseModel:
      additionalProperties: false
      description: Trade response model
      properties:
        allowNegativeBalanceForDestinationAsset:
          description: Allow negative balance for destination asset
          type: boolean
        custodyModel:
          $ref: '#/components/schemas/CustodyModel'
        mainTransactionId:
          description: Main transaction Id
          format: uuid
          nullable: true
          type: string
        payment:
          $ref: '#/components/schemas/TradingPaymentResponseModel'
        transactionGroupId:
          description: Transaction Group Id
          format: uuid
          nullable: true
          type: string
        useTradingShortcut:
          description: Use TradingShortcut
          type: boolean
      type: object
    TradingPairMarkupModel:
      additionalProperties: false
      properties:
        buyBasisPoints:
          description: Buy basis points
          format: double
          minimum: 0
          type: number
        sellBasisPoints:
          description: Sell basis points
          format: double
          minimum: 0
          type: number
        tradingPair:
          nullable: true
          type: string
      type: object
    TradingPairMarkupRequestModel:
      additionalProperties: false
      properties:
        buyBasisPoints:
          description: Buy basis points
          format: double
          minimum: 0
          type: number
        sellBasisPoints:
          description: Sell basis points
          format: double
          minimum: 0
          type: number
      type: object
    TradingPairName:
      additionalProperties: false
      properties:
        tradingPair:
          description: Trading pair
          minLength: 1
          type: string
      required:
        - tradingPair
      type: object
    TradingPaymentResponseModel:
      additionalProperties: false
      properties:
        assetTypeId:
          description: Id of Asset type (for Private Security)
          format: uuid
          nullable: true
          type: string
        comment:
          description: Comment
          nullable: true
          type: string
        cryptoAmount:
          nullable: true
          type: string
        currency:
          $ref: '#/components/schemas/ModelAssetFiatType'
        destination:
          $ref: '#/components/schemas/FundsStorageResponseModel'
        destinationCurrency:
          $ref: '#/components/schemas/ModelAssetFiatType'
        funds:
          description: Funds
          format: double
          nullable: true
          type: number
        id:
          description: Payment identifier
          format: uuid
          type: string
        memo:
          description: Memo
          nullable: true
          type: string
        network:
          $ref: '#/components/schemas/ModelNetworkChain'
        purposeOfPayment:
          description: Purpose of payment
          nullable: true
          type: string
        quantity:
          description: Precious metal quantity
          format: double
          nullable: true
          type: number
        rejectedReason:
          $ref: '#/components/schemas/PaymentRejectedReason'
        source:
          $ref: '#/components/schemas/FundsStorageResponseModel'
        sourceCurrency:
          $ref: '#/components/schemas/ModelAssetFiatType'
        status:
          $ref: '#/components/schemas/PaymentStatus'
        txHash:
          description: Transaction hash
          nullable: true
          type: string
        type:
          $ref: '#/components/schemas/PaymentType'
      type: object
    TransactionPartResponseModel:
      additionalProperties: false
      description: Transaction part response model
      properties:
        amount:
          description: Base amount.
          format: double
          type: number
        assetFiatType:
          $ref: '#/components/schemas/ModelAssetFiatType'
        createdAtUtc:
          description: Creation time
          format: date-time
          type: string
        custodialAccountFromId:
          description: Custodial account id from.
          format: uuid
          nullable: true
          type: string
        custodialAccountToId:
          description: Custodial account id to.
          format: uuid
          nullable: true
          type: string
        externalPaymentMethodId:
          description: External payment method id (FundsTransferMethodId).
          format: uuid
          nullable: true
          type: string
        failDetails:
          description: Fail details
          nullable: true
          type: string
        id:
          description: Transaction part identifier
          format: uuid
          type: string
        isRequired:
          description: "Is required to handle fees or we can skip it in validation and execution.\r\n(For now it's not handled, this property is going to be used in future)"
          type: boolean
        modifiedAtUtc:
          description: Modification time
          format: date-time
          nullable: true
          type: string
        operationType:
          $ref: '#/components/schemas/OperationType'
        paymentTransactionDetails:
          description: Payment transaction details
          nullable: true
          type: string
        status:
          $ref: '#/components/schemas/TransactionPartStatus'
      type: object
    TransactionPartStatus:
      description: Transaction part status
      enum:
        - pending
        - needsBalanceRenewal
        - done
        - fail
        - cancelled
      type: string
    TransactionResponseModel:
      additionalProperties: false
      description: Transaction response model
      properties:
        amount:
          description: Amount
          format: double
          nullable: true
          type: number
        comment:
          description: Comment
          nullable: true
          type: string
        createdAt:
          description: Timestamp when transaction was created
          format: date-time
          type: string
        cryptoAmount:
          description: Crypto amount
          format: double
          nullable: true
          type: number
        currency:
          $ref: '#/components/schemas/ModelAssetFiatType'
        description:
          description: Transaction description generated by Fortress
          nullable: true
          type: string
        destination:
          $ref: '#/components/schemas/FundsStorageResponseModel'
        fillPercentage:
          description: Fill percentage (for crypto orders)
          nullable: true
          type: string
        groupId:
          description: Transaction group identifier
          format: uuid
          nullable: true
          type: string
        id:
          description: Transaction identifier
          format: uuid
          type: string
        imad:
          $ref: '#/components/schemas/ImadModel'
        memo:
          description: Memo
          nullable: true
          type: string
        metadata:
          additionalProperties:
            nullable: true
            type: string
          description: Transaction metadata
          nullable: true
          type: object
        network:
          $ref: '#/components/schemas/ModelNetworkChain'
        paymentId:
          description: Payment identifier
          format: uuid
          type: string
        paymentType:
          $ref: '#/components/schemas/PaymentType'
        price:
          description: Contains executed price for Buy/Sell transactions
          format: double
          nullable: true
          type: number
        quantity:
          description: PM amount
          format: double
          nullable: true
          type: number
        returnCode:
          description: Return code (for Returned payments)
          nullable: true
          type: string
        source:
          $ref: '#/components/schemas/FundsStorageResponseModel'
        status:
          $ref: '#/components/schemas/TransactionStatus'
        txHash:
          description: Transaction hash
          nullable: true
          type: string
        updatedAt:
          description: Timestamp when transaction was updated
          format: date-time
          nullable: true
          type: string
      type: object
    TransactionResponseModelPageResponseModel:
      additionalProperties: false
      properties:
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/TransactionResponseModel'
          nullable: true
          type: array
        meta:
          $ref: '#/components/schemas/PageMetadata'
      type: object
    TransactionStatus:
      description: Transaction status
      enum:
        - new
        - processing
        - completed
        - failed
        - pending
        - aborted
        - inProgress
        - cancelled
      type: string
    TransactionWithPartsResponseModel:
      additionalProperties: false
      description: Transaction with parts response model
      properties:
        amount:
          description: Amount
          format: double
          nullable: true
          type: number
        comment:
          description: Comment
          nullable: true
          type: string
        createdAtUtc:
          description: Creation time
          format: date-time
          type: string
        cryptoAmount:
          description: Amount
          format: double
          nullable: true
          type: number
        destination:
          $ref: '#/components/schemas/FundsStorageResponseModel'
        failDetails:
          description: Fail details
          nullable: true
          type: string
        failReason:
          $ref: '#/components/schemas/FailReason'
        failReasonDetails:
          description: Fail reason details
          nullable: true
          type: string
        fillPercentage:
          description: Fill percentage (for crypto only)
          nullable: true
          type: string
        groupId:
          description: Transaction group identifier
          format: uuid
          nullable: true
          type: string
        id:
          description: Transaction identifier
          format: uuid
          type: string
        metadata:
          additionalProperties:
            nullable: true
            type: string
          description: Transaction metadata
          nullable: true
          type: object
        modifiedAtUtc:
          description: Modification time
          format: date-time
          nullable: true
          type: string
        parts:
          description: Transaction parts
          items:
            $ref: '#/components/schemas/TransactionPartResponseModel'
          nullable: true
          type: array
        paymentId:
          description: Payment identifier
          format: uuid
          type: string
        paymentType:
          $ref: '#/components/schemas/PaymentType'
        returnCode:
          description: Return code (for Returned payments)
          nullable: true
          type: string
        source:
          $ref: '#/components/schemas/FundsStorageResponseModel'
        status:
          $ref: '#/components/schemas/TransactionStatus'
      type: object
    TransferAccountModel:
      additionalProperties: false
      description: Transfer account model
      properties:
        id:
          description: >-
            Account identifier (Id for custodial accounts, blockchain address
            for addresses)
          minLength: 1
          type: string
        tag:
          description: Wallet tag
          nullable: true
          type: string
        type:
          $ref: '#/components/schemas/TransferAccountType'
      required:
        - id
      type: object
    TransferAccountType:
      description: Transfer account type
      enum:
        - account
        - address
      type: string
    TransferDirectionType:
      enum:
        - deposit
        - withdrawal
      type: string
    TransferMethod:
      additionalProperties: false
      description: Transfer method model
      properties:
        assetFiatTypes:
          description: Asset fiat types
          items:
            $ref: '#/components/schemas/ModelAssetFiatType'
          nullable: true
          type: array
        assetType:
          $ref: '#/components/schemas/ModelAssetType'
        direction:
          $ref: '#/components/schemas/TransferDirectionType'
        method:
          $ref: '#/components/schemas/TransferMethodType'
        networks:
          description: Networks
          items:
            $ref: '#/components/schemas/NetworkChain'
          nullable: true
          type: array
      type: object
    TransferMethodCollectionResponseModel:
      additionalProperties: false
      description: Collection response model
      properties:
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/TransferMethod'
          nullable: true
          type: array
      type: object
    TransferMethodType:
      description: Transfer method type
      enum:
        - ach
        - wire
        - cryptoTransfer
      type: string
    TransferModel:
      additionalProperties: false
      description: Transfer model
      properties:
        amount:
          description: Transfer amount
          format: double
          type: number
        asset:
          $ref: '#/components/schemas/ModelAssetFiatType'
        network:
          $ref: '#/components/schemas/ModelNetworkChain'
        status:
          $ref: '#/components/schemas/SettlementTransferStatus'
        transactionId:
          description: Transaction identifier
          format: uuid
          type: string
      type: object
    TransferRequestModel:
      additionalProperties: false
      description: Transfer request model
      properties:
        amount:
          description: Amount of the asset to transfer
          exclusiveMinimum: true
          format: double
          minimum: 0
          type: number
        asset:
          $ref: '#/components/schemas/ModelAssetFiatType'
        assetType:
          $ref: '#/components/schemas/ModelAssetTypeV2'
        assetTypeId:
          description: Id of asset type (used when we have private security)
          format: uuid
          nullable: true
          type: string
        comment:
          description: Comment
          maxLength: 1000
          nullable: true
          type: string
        from:
          $ref: '#/components/schemas/TransferAccountModel'
        network:
          $ref: '#/components/schemas/ModelNetworkChain'
        to:
          $ref: '#/components/schemas/TransferAccountModel'
        type:
          $ref: '#/components/schemas/TransferType'
      type: object
    TransferType:
      description: Transfer type
      enum:
        - withdrawal
        - internal
        - deposit
      type: string
    UpdateAccountLabelRequestModel:
      additionalProperties: false
      description: Update account label request model
      properties:
        label:
          $ref: '#/components/schemas/CustodialAccountLabel'
      type: object
    UpdateAccountStatusRequestModel:
      additionalProperties: false
      description: Update account status request model
      properties:
        accountStatus:
          $ref: '#/components/schemas/CustodialAccountStatus'
        decisionReason:
          description: Reason (applied only for suspend)s
          nullable: true
          type: string
      type: object
    UpdateAccountStatusRequestPrivateModel:
      additionalProperties: false
      description: Update account status request model
      properties:
        accountStatus:
          $ref: '#/components/schemas/CustodialAccountStatus'
        decisionReason:
          description: Reason (applied only for suspend)s
          nullable: true
          type: string
      type: object
    UpdateCustodialAccountNameRequestModel:
      additionalProperties: false
      description: Update custodial account name request model
      properties:
        name:
          description: The new name for the custodial account
          maxLength: 50
          nullable: true
          type: string
      type: object
    UpdateCustodialAccountNameWithLabelRequestModel:
      additionalProperties: false
      description: Update custodial account name with label request model.
      properties:
        label:
          $ref: '#/components/schemas/CustodialAccountLabel'
        name:
          description: The new name for the custodial account
          maxLength: 50
          nullable: true
          type: string
      type: object
    UpdateCustomAssetRequestModel:
      additionalProperties: false
      properties:
        amount:
          format: double
          nullable: true
          type: number
        currency:
          $ref: '#/components/schemas/ModelAssetFiatType'
        description:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        symbol:
          nullable: true
          type: string
      type: object
    UpdateOpsUserPasswordRequest:
      additionalProperties: false
      description: Password update request
      properties:
        password:
          description: Gets or sets the password.
          minLength: 20
          type: string
      required:
        - password
      type: object
    UpdateOrganizationPasswordRequest:
      additionalProperties: false
      description: Password update request
      properties:
        password:
          description: Gets or sets the password.
          minLength: 20
          type: string
      required:
        - password
      type: object
    UserOrganizationRelation:
      description: >-
        Organization relations. Includes only allowed for the end-users
        relations.
      enum:
        - webhookConfig
      type: string
    ValueDateCurrencyInterbankSettledAmount:
      additionalProperties: false
      properties:
        amount:
          nullable: true
          type: string
        currency:
          nullable: true
          type: string
        date:
          nullable: true
          type: string
      type: object
    WebhookConfigPatchModel:
      additionalProperties: false
      description: Webhook config patch model
      properties:
        enabled:
          description: Gets or sets whether this webhook config is enabled.
          nullable: true
          type: boolean
        sharedSecret:
          description: Gets or sets shared secret.
          maxLength: 1000
          minLength: 8
          nullable: true
          type: string
        url:
          description: Gets or sets the webhook url.
          maxLength: 1000
          minLength: 3
          nullable: true
          type: string
        webhookTypes:
          description: Gets or sets the webhook types.
          items:
            $ref: '#/components/schemas/WebhookTypeResponse'
          nullable: true
          type: array
      type: object
    WebhookConfigResponseModel:
      additionalProperties: false
      description: Webhook config API response model
      properties:
        createdAtUtc:
          description: Gets or sets the created at UTC.
          format: date-time
          type: string
        enabled:
          description: >-
            Gets or sets a value indicating whether this
            Fortress.Core.Application.Models.Organizations.WebhookConfigResponseModel
            is enabled.
          type: boolean
        id:
          description: Gets or sets the identifier.
          format: uuid
          type: string
        organizationId:
          description: Gets or sets the organization identifier.
          format: uuid
          type: string
        sharedSecret:
          description: Gets or sets the shared secret.
          nullable: true
          type: string
        updatedAtUtc:
          description: Gets or sets the updated at UTC.
          format: date-time
          nullable: true
          type: string
        url:
          description: Gets or sets the URL.
          nullable: true
          type: string
        webhookTypes:
          description: Gets or sets the webhook types.
          items:
            $ref: '#/components/schemas/WebhookTypeResponse'
          nullable: true
          type: array
      type: object
    WebhookTypeResponse:
      description: The type of a webhook
      enum:
        - payment
        - transaction
        - nft
        - kyc
        - document
        - custodialAccount
        - externalAccount
        - identity
        - asset
        - wallet
      type: string
    WidgetIntegrationType:
      enum:
        - browser
        - mobileApp
      type: string
    WidgetModel:
      additionalProperties: false
      properties:
        widgetUrl:
          nullable: true
          type: string
      type: object
    WireInstructionsModel:
      additionalProperties: false
      description: Wire instructions response model
      properties:
        accountNumber:
          description: Represents account number.
          nullable: true
          type: string
        receiverAddress:
          $ref: '#/components/schemas/AddressModel'
        receiverBankAddress:
          $ref: '#/components/schemas/AddressModel'
        receiverBankName:
          description: Represents receiver bank name.
          nullable: true
          type: string
        receiverName:
          description: Represents receiver name.
          nullable: true
          type: string
        refCode:
          description: Reference code
          nullable: true
          type: string
        routingNumber:
          description: Represents routing number.
          nullable: true
          type: string
        swiftCode:
          description: Represents SWIFT code.
          nullable: true
          type: string
      type: object
    WithdrawCryptoRequestModel:
      additionalProperties: false
      description: Buy crypto request model
      properties:
        address:
          description: Gets or sets the destination address for withdrawal.
          nullable: true
          type: string
        amount:
          description: Gets or sets the amount of the currency to withdraw.
          format: double
          type: number
        comment:
          description: Gets or sets the comment.
          nullable: true
          type: string
        currency:
          $ref: '#/components/schemas/ModelAssetFiatType'
        network:
          $ref: '#/components/schemas/ModelNetworkChain'
        tag:
          description: Gets or sets the destination address tag for withdrawal.
          nullable: true
          type: string
      type: object
  securitySchemes:
    Bearer:
      description: >-
        Put access token in the box below. For example: <b>Bearer
        eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6I</b>
      in: header
      name: Authorization
      type: apiKey
security:
  - Bearer: []
x-readme:
  explorer-enabled: true
  proxy-enabled: true

